
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+2406 (git sha1 aafaeb66, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Running command `read_verilog  -DFPGA -DFPGA_ICE40 ../hdl/fpga/smoldvi_fpga_icebreaker.v ../hdl/fpga/pll_12_126.v ../hdl/smoldvi/smoldvi_top.v ../hdl/libfpga/video/dvi_serialiser.v ../hdl/libfpga/cdc/gearbox.v ../hdl/libfpga/common/ddr_out.v ../hdl/libfpga/video/dvi_tx_parallel.v ../hdl/libfpga/video/dvi_timing.v ../hdl/libfpga/video/tmds_encode.v ../hdl/libfpga/common/popcount.v ../hdl/libfpga/common/blinky.v ../hdl/libfpga/common/fpga_reset.v ../hdl/libfpga/common/reset_sync.v; synth_ice40 -retime; write_json smoldvi_icestick.json' --

1. Executing Verilog-2005 frontend: ../hdl/fpga/smoldvi_fpga_icebreaker.v
Parsing Verilog input from `../hdl/fpga/smoldvi_fpga_icebreaker.v' to AST representation.
Generating RTLIL representation for module `\smoldvi_fpga'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ../hdl/fpga/pll_12_126.v
Parsing Verilog input from `../hdl/fpga/pll_12_126.v' to AST representation.
Generating RTLIL representation for module `\pll_12_126'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ../hdl/smoldvi/smoldvi_top.v
Parsing Verilog input from `../hdl/smoldvi/smoldvi_top.v' to AST representation.
Generating RTLIL representation for module `\smoldvi_top'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ../hdl/libfpga/video/dvi_serialiser.v
Parsing Verilog input from `../hdl/libfpga/video/dvi_serialiser.v' to AST representation.
Generating RTLIL representation for module `\dvi_serialiser'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: ../hdl/libfpga/cdc/gearbox.v
Parsing Verilog input from `../hdl/libfpga/cdc/gearbox.v' to AST representation.
Generating RTLIL representation for module `\gearbox'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: ../hdl/libfpga/common/ddr_out.v
Parsing Verilog input from `../hdl/libfpga/common/ddr_out.v' to AST representation.
Generating RTLIL representation for module `\ddr_out'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: ../hdl/libfpga/video/dvi_tx_parallel.v
Parsing Verilog input from `../hdl/libfpga/video/dvi_tx_parallel.v' to AST representation.
Generating RTLIL representation for module `\dvi_tx_parallel'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: ../hdl/libfpga/video/dvi_timing.v
Parsing Verilog input from `../hdl/libfpga/video/dvi_timing.v' to AST representation.
Generating RTLIL representation for module `\dvi_timing'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: ../hdl/libfpga/video/tmds_encode.v
Parsing Verilog input from `../hdl/libfpga/video/tmds_encode.v' to AST representation.
Generating RTLIL representation for module `\tmds_encode'.
Warning: Replacing memory \c_delayed with list of registers. See ../hdl/libfpga/video/tmds_encode.v:119
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: ../hdl/libfpga/common/popcount.v
Parsing Verilog input from `../hdl/libfpga/common/popcount.v' to AST representation.
Generating RTLIL representation for module `\popcount'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: ../hdl/libfpga/common/blinky.v
Parsing Verilog input from `../hdl/libfpga/common/blinky.v' to AST representation.
Generating RTLIL representation for module `\blinky'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: ../hdl/libfpga/common/fpga_reset.v
Parsing Verilog input from `../hdl/libfpga/common/fpga_reset.v' to AST representation.
Generating RTLIL representation for module `\fpga_reset'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: ../hdl/libfpga/common/reset_sync.v
Parsing Verilog input from `../hdl/libfpga/common/reset_sync.v' to AST representation.
Generating RTLIL representation for module `\reset_sync'.
Successfully finished Verilog frontend.

14. Executing SYNTH_ICE40 pass.

14.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

14.2. Executing HIERARCHY pass (managing design hierarchy).

14.2.1. Finding top of design hierarchy..
root of   0 design levels: reset_sync          
root of   0 design levels: fpga_reset          
root of   0 design levels: blinky              
root of   0 design levels: popcount            
root of   1 design levels: tmds_encode         
root of   0 design levels: dvi_timing          
root of   2 design levels: dvi_tx_parallel     
root of   1 design levels: ddr_out             
root of   0 design levels: gearbox             
root of   2 design levels: dvi_serialiser      
root of   3 design levels: smoldvi_top         
root of   1 design levels: pll_12_126          
root of   4 design levels: smoldvi_fpga        
Automatically selected smoldvi_fpga as design top module.

14.2.2. Analyzing design hierarchy..
Top module:  \smoldvi_fpga
Used module:     \smoldvi_top
Used module:         \dvi_serialiser
Used module:             \ddr_out
Used module:             \gearbox
Used module:         \dvi_tx_parallel
Used module:             \tmds_encode
Used module:                 \popcount
Used module:             \dvi_timing
Used module:     \blinky
Used module:     \reset_sync
Used module:     \fpga_reset
Used module:     \pll_12_126
Parameter \CLK_HZ = 12000000
Parameter \BLINK_HZ = 1

14.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\blinky'.
Parameter \CLK_HZ = 12000000
Parameter \BLINK_HZ = 1
Generating RTLIL representation for module `$paramod\blinky\CLK_HZ=12000000\BLINK_HZ=1'.
Parameter \SHIFT = 3
Parameter \COUNT = 0

14.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\fpga_reset'.
Parameter \SHIFT = 3
Parameter \COUNT = 0
Generating RTLIL representation for module `$paramod\fpga_reset\SHIFT=3\COUNT=0'.
Parameter \H_SYNC_POLARITY = 1'0
Parameter \H_FRONT_PORCH = 16
Parameter \H_SYNC_WIDTH = 96
Parameter \H_BACK_PORCH = 48
Parameter \H_ACTIVE_PIXELS = 640
Parameter \V_SYNC_POLARITY = 1'0
Parameter \V_FRONT_PORCH = 10
Parameter \V_SYNC_WIDTH = 2
Parameter \V_BACK_PORCH = 33
Parameter \V_ACTIVE_LINES = 480

14.2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\dvi_tx_parallel'.
Parameter \H_SYNC_POLARITY = 1'0
Parameter \H_FRONT_PORCH = 16
Parameter \H_SYNC_WIDTH = 96
Parameter \H_BACK_PORCH = 48
Parameter \H_ACTIVE_PIXELS = 640
Parameter \V_SYNC_POLARITY = 1'0
Parameter \V_FRONT_PORCH = 10
Parameter \V_SYNC_WIDTH = 2
Parameter \V_BACK_PORCH = 33
Parameter \V_ACTIVE_LINES = 480
Generating RTLIL representation for module `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_tx_parallel'.
Parameter \H_SYNC_POLARITY = 1'0
Parameter \H_FRONT_PORCH = 16
Parameter \H_SYNC_WIDTH = 96
Parameter \H_BACK_PORCH = 48
Parameter \H_ACTIVE_PIXELS = 640
Parameter \V_SYNC_POLARITY = 1'0
Parameter \V_FRONT_PORCH = 10
Parameter \V_SYNC_WIDTH = 2
Parameter \V_BACK_PORCH = 33
Parameter \V_ACTIVE_LINES = 480

14.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\dvi_timing'.
Parameter \H_SYNC_POLARITY = 1'0
Parameter \H_FRONT_PORCH = 16
Parameter \H_SYNC_WIDTH = 96
Parameter \H_BACK_PORCH = 48
Parameter \H_ACTIVE_PIXELS = 640
Parameter \V_SYNC_POLARITY = 1'0
Parameter \V_FRONT_PORCH = 10
Parameter \V_SYNC_WIDTH = 2
Parameter \V_BACK_PORCH = 33
Parameter \V_ACTIVE_LINES = 480
Generating RTLIL representation for module `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing'.
Parameter \W_IN = 10
Parameter \W_OUT = 2
Parameter \STORAGE_SIZE = 20

14.2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\gearbox'.
Parameter \W_IN = 10
Parameter \W_OUT = 2
Parameter \STORAGE_SIZE = 20
Generating RTLIL representation for module `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20'.
Parameter \W_IN = 8

14.2.8. Executing AST frontend in derive mode using pre-parsed AST for module `\popcount'.
Parameter \W_IN = 8
Generating RTLIL representation for module `$paramod\popcount\W_IN=8'.
Parameter \W_IN = 8
Found cached RTLIL representation for module `$paramod\popcount\W_IN=8'.

14.2.9. Analyzing design hierarchy..
Top module:  \smoldvi_fpga
Used module:     \smoldvi_top
Used module:         \dvi_serialiser
Used module:             \ddr_out
Used module:             $paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20
Used module:         $paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_tx_parallel
Used module:             \tmds_encode
Used module:                 $paramod\popcount\W_IN=8
Used module:             \dvi_timing
Used module:     $paramod\blinky\CLK_HZ=12000000\BLINK_HZ=1
Used module:     \reset_sync
Used module:     $paramod\fpga_reset\SHIFT=3\COUNT=0
Used module:     \pll_12_126
Parameter \H_SYNC_POLARITY = 1'0
Parameter \H_FRONT_PORCH = 16
Parameter \H_SYNC_WIDTH = 96
Parameter \H_BACK_PORCH = 48
Parameter \H_ACTIVE_PIXELS = 640
Parameter \V_SYNC_POLARITY = 1'0
Parameter \V_FRONT_PORCH = 10
Parameter \V_SYNC_WIDTH = 2
Parameter \V_BACK_PORCH = 33
Parameter \V_ACTIVE_LINES = 480
Found cached RTLIL representation for module `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing'.

14.2.10. Analyzing design hierarchy..
Top module:  \smoldvi_fpga
Used module:     \smoldvi_top
Used module:         \dvi_serialiser
Used module:             \ddr_out
Used module:             $paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20
Used module:         $paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_tx_parallel
Used module:             \tmds_encode
Used module:                 $paramod\popcount\W_IN=8
Used module:             $paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing
Used module:     $paramod\blinky\CLK_HZ=12000000\BLINK_HZ=1
Used module:     \reset_sync
Used module:     $paramod\fpga_reset\SHIFT=3\COUNT=0
Used module:     \pll_12_126

14.2.11. Analyzing design hierarchy..
Top module:  \smoldvi_fpga
Used module:     \smoldvi_top
Used module:         \dvi_serialiser
Used module:             \ddr_out
Used module:             $paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20
Used module:         $paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_tx_parallel
Used module:             \tmds_encode
Used module:                 $paramod\popcount\W_IN=8
Used module:             $paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing
Used module:     $paramod\blinky\CLK_HZ=12000000\BLINK_HZ=1
Used module:     \reset_sync
Used module:     $paramod\fpga_reset\SHIFT=3\COUNT=0
Used module:     \pll_12_126
Removing unused module `\fpga_reset'.
Removing unused module `\blinky'.
Removing unused module `\popcount'.
Removing unused module `\dvi_timing'.
Removing unused module `\dvi_tx_parallel'.
Removing unused module `\gearbox'.
Removed 6 unused modules.
Warning: Resizing cell port smoldvi_top.dvi.g from 9 bits to 8 bits.
Warning: Resizing cell port smoldvi_top.dvi.r from 10 bits to 8 bits.

14.3. Executing PROC pass (convert processes to netlists).

14.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

14.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$../hdl/libfpga/common/reset_sync.v:32$149 in module reset_sync.
Marked 2 switch rules as full_case in process $proc$../hdl/libfpga/cdc/gearbox.v:70$544 in module $paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.
Marked 2 switch rules as full_case in process $proc$../hdl/libfpga/cdc/gearbox.v:56$524 in module $paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.
Marked 3 switch rules as full_case in process $proc$../hdl/libfpga/video/dvi_timing.v:108$513 in module $paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.
Marked 3 switch rules as full_case in process $proc$../hdl/libfpga/video/dvi_timing.v:61$502 in module $paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.
Marked 3 switch rules as full_case in process $proc$../hdl/libfpga/video/tmds_encode.v:116$117 in module tmds_encode.
Marked 4 switch rules as full_case in process $proc$../hdl/libfpga/video/tmds_encode.v:84$87 in module tmds_encode.
Marked 1 switch rules as full_case in process $proc$../hdl/libfpga/video/tmds_encode.v:74$85 in module tmds_encode.
Marked 2 switch rules as full_case in process $proc$../hdl/libfpga/video/tmds_encode.v:44$64 in module tmds_encode.
Marked 1 switch rules as full_case in process $proc$../hdl/libfpga/common/fpga_reset.v:39$497 in module $paramod\fpga_reset\SHIFT=3\COUNT=0.
Marked 1 switch rules as full_case in process $proc$../hdl/libfpga/common/ddr_out.v:35$42 in module ddr_out.
Marked 1 switch rules as full_case in process $proc$../hdl/libfpga/common/blinky.v:57$491 in module $paramod\blinky\CLK_HZ=12000000\BLINK_HZ=1.
Marked 3 switch rules as full_case in process $proc$../hdl/smoldvi/smoldvi_top.v:25$3 in module smoldvi_top.
Marked 1 switch rules as full_case in process $proc$../hdl/fpga/smoldvi_fpga_icebreaker.v:54$1 in module smoldvi_fpga.
Removed a total of 0 dead cases.

14.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 17 redundant assignments.
Promoted 10 assignments to connections.

14.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `$paramod\fpga_reset\SHIFT=3\COUNT=0.$proc$../hdl/libfpga/common/fpga_reset.v:38$501'.
  Set init value: \has_shifter.shift = 3'000
Found init rule in `$paramod\blinky\CLK_HZ=12000000\BLINK_HZ=1.$proc$../hdl/libfpga/common/blinky.v:34$496'.
  Set init value: \blink_r = 1'0
Found init rule in `$paramod\blinky\CLK_HZ=12000000\BLINK_HZ=1.$proc$../hdl/libfpga/common/blinky.v:32$495'.
  Set init value: \ctr = 23'00000000000000000000000

14.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_n_in in `\reset_sync.$proc$../hdl/libfpga/common/reset_sync.v:32$149'.
Found async reset \rst_n_out in `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.$proc$../hdl/libfpga/cdc/gearbox.v:70$544'.
Found async reset \rst_n_in in `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.$proc$../hdl/libfpga/cdc/gearbox.v:56$524'.
Found async reset \rst_n in `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.$proc$../hdl/libfpga/video/dvi_timing.v:108$513'.
Found async reset \rst_n in `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.$proc$../hdl/libfpga/video/dvi_timing.v:61$502'.
Found async reset \rst_n in `\tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:116$117'.
Found async reset \rst_n in `\tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:84$87'.
Found async reset \rst_n in `\tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:74$85'.
Found async reset \rst_n in `\tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:44$64'.
Found async reset \force_rst_n in `$paramod\fpga_reset\SHIFT=3\COUNT=0.$proc$../hdl/libfpga/common/fpga_reset.v:39$497'.
Found async reset \rst_n in `\ddr_out.$proc$../hdl/libfpga/common/ddr_out.v:35$42'.
Found async reset \rst_n_pix in `\smoldvi_top.$proc$../hdl/smoldvi/smoldvi_top.v:25$3'.
Found async reset \rst_n_bit in `\smoldvi_fpga.$proc$../hdl/fpga/smoldvi_fpga_icebreaker.v:54$1'.

14.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\reset_sync.$proc$../hdl/libfpga/common/reset_sync.v:32$149'.
     1/1: $0\delay[1:0]
Creating decoders for process `$paramod\popcount\W_IN=8.$proc$../hdl/libfpga/common/popcount.v:33$559'.
Creating decoders for process `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.$proc$../hdl/libfpga/cdc/gearbox.v:70$544'.
     1/2: $0\out_ptr[3:0]
     2/2: $0\dout[1:0]
Creating decoders for process `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.$proc$../hdl/libfpga/cdc/gearbox.v:56$524'.
     1/4: $0\in_ptr[0:0]
     2/4: $1$lookahead\storage$523[19:0]$531
     3/4: $1$bitselwrite$data$../hdl/libfpga/cdc/gearbox.v:64$522[19:0]$530
     4/4: $1$bitselwrite$mask$../hdl/libfpga/cdc/gearbox.v:64$521[19:0]$529
Creating decoders for process `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.$proc$../hdl/libfpga/video/dvi_timing.v:108$513'.
     1/4: $0\v_state[1:0]
     2/4: $0\v_ctr[8:0]
     3/4: $0\in_active_vertical_period[0:0]
     4/4: $0\vsync[0:0]
Creating decoders for process `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.$proc$../hdl/libfpga/video/dvi_timing.v:61$502'.
     1/5: $0\v_advance[0:0]
     2/5: $0\h_ctr[9:0]
     3/5: $0\h_state[1:0]
     4/5: $0\den[0:0]
     5/5: $0\hsync[0:0]
Creating decoders for process `\tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:116$117'.
     1/4: $0\q[9:0]
     2/4: $0\c_delayed[1][1:0]
     3/4: $0\c_delayed[0][1:0]
     4/4: $1$splitcmplxassign$../hdl/libfpga/video/tmds_encode.v:122$63[3:0]$120
Creating decoders for process `\tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:84$87'.
     1/2: $0\imbalance[4:0]
     2/2: $0\q_m_inv[9:0]
Creating decoders for process `\tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:74$85'.
     1/1: $0\den_delayed[1:0]
Creating decoders for process `\tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:44$64'.
     1/1: $0\q_m[8:0]
Creating decoders for process `$paramod\fpga_reset\SHIFT=3\COUNT=0.$proc$../hdl/libfpga/common/fpga_reset.v:38$501'.
Creating decoders for process `$paramod\fpga_reset\SHIFT=3\COUNT=0.$proc$../hdl/libfpga/common/fpga_reset.v:39$497'.
     1/1: $0\has_shifter.shift[2:0]
Creating decoders for process `\ddr_out.$proc$../hdl/libfpga/common/ddr_out.v:35$42'.
     1/1: $0\d_fall_r[0:0]
Creating decoders for process `$paramod\blinky\CLK_HZ=12000000\BLINK_HZ=1.$proc$../hdl/libfpga/common/blinky.v:34$496'.
Creating decoders for process `$paramod\blinky\CLK_HZ=12000000\BLINK_HZ=1.$proc$../hdl/libfpga/common/blinky.v:32$495'.
Creating decoders for process `$paramod\blinky\CLK_HZ=12000000\BLINK_HZ=1.$proc$../hdl/libfpga/common/blinky.v:57$491'.
     1/2: $0\ctr[22:0]
     2/2: $0\blink_r[0:0]
Creating decoders for process `\smoldvi_top.$proc$../hdl/smoldvi/smoldvi_top.v:25$3'.
     1/3: $0\frame_ctr[7:0]
     2/3: $0\y_ctr[8:0]
     3/3: $0\x_ctr[9:0]
Creating decoders for process `\smoldvi_fpga.$proc$../hdl/fpga/smoldvi_fpga_icebreaker.v:54$1'.
     1/1: $0\bit_pix_div[4:0]

14.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\popcount\W_IN=8.\accum' from process `$paramod\popcount\W_IN=8.$proc$../hdl/libfpga/common/popcount.v:33$559'.
No latch inferred for signal `$paramod\popcount\W_IN=8.\i' from process `$paramod\popcount\W_IN=8.$proc$../hdl/libfpga/common/popcount.v:33$559'.

14.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\reset_sync.\delay' using process `\reset_sync.$proc$../hdl/libfpga/common/reset_sync.v:32$149'.
  created $adff cell `$procdff$748' with positive edge clock and negative level reset.
Creating register for signal `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.\dout' using process `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.$proc$../hdl/libfpga/cdc/gearbox.v:70$544'.
  created $adff cell `$procdff$749' with positive edge clock and negative level reset.
Creating register for signal `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.\out_ptr' using process `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.$proc$../hdl/libfpga/cdc/gearbox.v:70$544'.
  created $adff cell `$procdff$750' with positive edge clock and negative level reset.
Creating register for signal `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.\storage' using process `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.$proc$../hdl/libfpga/cdc/gearbox.v:56$524'.
  created $dff cell `$procdff$751' with positive edge clock.
Creating register for signal `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.\in_ptr' using process `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.$proc$../hdl/libfpga/cdc/gearbox.v:56$524'.
  created $adff cell `$procdff$752' with positive edge clock and negative level reset.
Creating register for signal `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.$bitselwrite$mask$../hdl/libfpga/cdc/gearbox.v:64$521' using process `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.$proc$../hdl/libfpga/cdc/gearbox.v:56$524'.
  created $adff cell `$procdff$753' with positive edge clock and negative level reset.
Creating register for signal `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.$bitselwrite$data$../hdl/libfpga/cdc/gearbox.v:64$522' using process `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.$proc$../hdl/libfpga/cdc/gearbox.v:56$524'.
  created $adff cell `$procdff$754' with positive edge clock and negative level reset.
Creating register for signal `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.$lookahead\storage$523' using process `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.$proc$../hdl/libfpga/cdc/gearbox.v:56$524'.
  created $adff cell `$procdff$755' with positive edge clock and negative level reset.
Creating register for signal `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.\vsync' using process `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.$proc$../hdl/libfpga/video/dvi_timing.v:108$513'.
  created $adff cell `$procdff$756' with positive edge clock and negative level reset.
Creating register for signal `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.\in_active_vertical_period' using process `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.$proc$../hdl/libfpga/video/dvi_timing.v:108$513'.
  created $adff cell `$procdff$757' with positive edge clock and negative level reset.
Creating register for signal `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.\v_ctr' using process `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.$proc$../hdl/libfpga/video/dvi_timing.v:108$513'.
  created $adff cell `$procdff$758' with positive edge clock and negative level reset.
Creating register for signal `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.\v_state' using process `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.$proc$../hdl/libfpga/video/dvi_timing.v:108$513'.
  created $adff cell `$procdff$759' with positive edge clock and negative level reset.
Creating register for signal `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.\hsync' using process `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.$proc$../hdl/libfpga/video/dvi_timing.v:61$502'.
  created $adff cell `$procdff$760' with positive edge clock and negative level reset.
Creating register for signal `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.\den' using process `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.$proc$../hdl/libfpga/video/dvi_timing.v:61$502'.
  created $adff cell `$procdff$761' with positive edge clock and negative level reset.
Creating register for signal `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.\h_ctr' using process `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.$proc$../hdl/libfpga/video/dvi_timing.v:61$502'.
  created $adff cell `$procdff$762' with positive edge clock and negative level reset.
Creating register for signal `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.\h_state' using process `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.$proc$../hdl/libfpga/video/dvi_timing.v:61$502'.
  created $adff cell `$procdff$763' with positive edge clock and negative level reset.
Creating register for signal `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.\v_advance' using process `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.$proc$../hdl/libfpga/video/dvi_timing.v:61$502'.
  created $adff cell `$procdff$764' with positive edge clock and negative level reset.
Creating register for signal `\tmds_encode.\q' using process `\tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:116$117'.
  created $adff cell `$procdff$765' with positive edge clock and negative level reset.
Creating register for signal `\tmds_encode.$splitcmplxassign$../hdl/libfpga/video/tmds_encode.v:122$63' using process `\tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:116$117'.
  created $adff cell `$procdff$766' with positive edge clock and negative level reset.
Creating register for signal `\tmds_encode.\c_delayed[0]' using process `\tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:116$117'.
  created $adff cell `$procdff$767' with positive edge clock and negative level reset.
Creating register for signal `\tmds_encode.\c_delayed[1]' using process `\tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:116$117'.
  created $adff cell `$procdff$768' with positive edge clock and negative level reset.
Creating register for signal `\tmds_encode.\imbalance' using process `\tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:84$87'.
  created $adff cell `$procdff$769' with positive edge clock and negative level reset.
Creating register for signal `\tmds_encode.\q_m_inv' using process `\tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:84$87'.
  created $adff cell `$procdff$770' with positive edge clock and negative level reset.
Creating register for signal `\tmds_encode.\den_delayed' using process `\tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:74$85'.
  created $adff cell `$procdff$771' with positive edge clock and negative level reset.
Creating register for signal `\tmds_encode.\q_m' using process `\tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:44$64'.
  created $adff cell `$procdff$772' with positive edge clock and negative level reset.
Creating register for signal `$paramod\fpga_reset\SHIFT=3\COUNT=0.\has_shifter.shift' using process `$paramod\fpga_reset\SHIFT=3\COUNT=0.$proc$../hdl/libfpga/common/fpga_reset.v:39$497'.
  created $adff cell `$procdff$773' with positive edge clock and negative level reset.
Creating register for signal `\ddr_out.\d_fall_r' using process `\ddr_out.$proc$../hdl/libfpga/common/ddr_out.v:35$42'.
  created $adff cell `$procdff$774' with positive edge clock and negative level reset.
Creating register for signal `$paramod\blinky\CLK_HZ=12000000\BLINK_HZ=1.\ctr' using process `$paramod\blinky\CLK_HZ=12000000\BLINK_HZ=1.$proc$../hdl/libfpga/common/blinky.v:57$491'.
  created $dff cell `$procdff$775' with positive edge clock.
Creating register for signal `$paramod\blinky\CLK_HZ=12000000\BLINK_HZ=1.\blink_r' using process `$paramod\blinky\CLK_HZ=12000000\BLINK_HZ=1.$proc$../hdl/libfpga/common/blinky.v:57$491'.
  created $dff cell `$procdff$776' with positive edge clock.
Creating register for signal `\smoldvi_top.\x_ctr' using process `\smoldvi_top.$proc$../hdl/smoldvi/smoldvi_top.v:25$3'.
  created $adff cell `$procdff$777' with positive edge clock and negative level reset.
Creating register for signal `\smoldvi_top.\y_ctr' using process `\smoldvi_top.$proc$../hdl/smoldvi/smoldvi_top.v:25$3'.
  created $adff cell `$procdff$778' with positive edge clock and negative level reset.
Creating register for signal `\smoldvi_top.\frame_ctr' using process `\smoldvi_top.$proc$../hdl/smoldvi/smoldvi_top.v:25$3'.
  created $adff cell `$procdff$779' with positive edge clock and negative level reset.
Creating register for signal `\smoldvi_fpga.\bit_pix_div' using process `\smoldvi_fpga.$proc$../hdl/fpga/smoldvi_fpga_icebreaker.v:54$1'.
  created $adff cell `$procdff$780' with positive edge clock and negative level reset.

14.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `reset_sync.$proc$../hdl/libfpga/common/reset_sync.v:32$149'.
Removing empty process `$paramod\popcount\W_IN=8.$proc$../hdl/libfpga/common/popcount.v:33$559'.
Found and cleaned up 1 empty switch in `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.$proc$../hdl/libfpga/cdc/gearbox.v:70$544'.
Removing empty process `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.$proc$../hdl/libfpga/cdc/gearbox.v:70$544'.
Found and cleaned up 1 empty switch in `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.$proc$../hdl/libfpga/cdc/gearbox.v:56$524'.
Removing empty process `$paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.$proc$../hdl/libfpga/cdc/gearbox.v:56$524'.
Found and cleaned up 7 empty switches in `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.$proc$../hdl/libfpga/video/dvi_timing.v:108$513'.
Removing empty process `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.$proc$../hdl/libfpga/video/dvi_timing.v:108$513'.
Found and cleaned up 6 empty switches in `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.$proc$../hdl/libfpga/video/dvi_timing.v:61$502'.
Removing empty process `$paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.$proc$../hdl/libfpga/video/dvi_timing.v:61$502'.
Found and cleaned up 2 empty switches in `\tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:116$117'.
Removing empty process `tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:116$117'.
Found and cleaned up 4 empty switches in `\tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:84$87'.
Removing empty process `tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:84$87'.
Removing empty process `tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:74$85'.
Found and cleaned up 1 empty switch in `\tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:44$64'.
Removing empty process `tmds_encode.$proc$../hdl/libfpga/video/tmds_encode.v:44$64'.
Removing empty process `$paramod\fpga_reset\SHIFT=3\COUNT=0.$proc$../hdl/libfpga/common/fpga_reset.v:38$501'.
Removing empty process `$paramod\fpga_reset\SHIFT=3\COUNT=0.$proc$../hdl/libfpga/common/fpga_reset.v:39$497'.
Removing empty process `ddr_out.$proc$../hdl/libfpga/common/ddr_out.v:35$42'.
Removing empty process `$paramod\blinky\CLK_HZ=12000000\BLINK_HZ=1.$proc$../hdl/libfpga/common/blinky.v:34$496'.
Removing empty process `$paramod\blinky\CLK_HZ=12000000\BLINK_HZ=1.$proc$../hdl/libfpga/common/blinky.v:32$495'.
Found and cleaned up 1 empty switch in `$paramod\blinky\CLK_HZ=12000000\BLINK_HZ=1.$proc$../hdl/libfpga/common/blinky.v:57$491'.
Removing empty process `$paramod\blinky\CLK_HZ=12000000\BLINK_HZ=1.$proc$../hdl/libfpga/common/blinky.v:57$491'.
Found and cleaned up 3 empty switches in `\smoldvi_top.$proc$../hdl/smoldvi/smoldvi_top.v:25$3'.
Removing empty process `smoldvi_top.$proc$../hdl/smoldvi/smoldvi_top.v:25$3'.
Removing empty process `smoldvi_fpga.$proc$../hdl/fpga/smoldvi_fpga_icebreaker.v:54$1'.
Cleaned up 26 empty switches.

14.4. Executing FLATTEN pass (flatten design).
Using template pll_12_126 for cells of type pll_12_126.
Using template $paramod\fpga_reset\SHIFT=3\COUNT=0 for cells of type $paramod\fpga_reset\SHIFT=3\COUNT=0.
Using template reset_sync for cells of type reset_sync.
Using template $paramod\blinky\CLK_HZ=12000000\BLINK_HZ=1 for cells of type $paramod\blinky\CLK_HZ=12000000\BLINK_HZ=1.
Using template smoldvi_top for cells of type smoldvi_top.
Using template dvi_serialiser for cells of type dvi_serialiser.
Using template $paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_tx_parallel for cells of type $paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_tx_parallel.
Using template ddr_out for cells of type ddr_out.
Using template $paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20 for cells of type $paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.
Using template $paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing for cells of type $paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.
Using template tmds_encode for cells of type tmds_encode.
Using template $paramod\popcount\W_IN=8 for cells of type $paramod\popcount\W_IN=8.
<suppressed ~33 debug messages>
No more expansions possible.
Deleting now unused module reset_sync.
Deleting now unused module $paramod\popcount\W_IN=8.
Deleting now unused module $paramod\gearbox\W_IN=10\W_OUT=2\STORAGE_SIZE=20.
Deleting now unused module $paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_timing.
Deleting now unused module tmds_encode.
Deleting now unused module $paramod$6503f3091da5a5276bc817615a8a7225dcf6dba0\dvi_tx_parallel.
Deleting now unused module $paramod\fpga_reset\SHIFT=3\COUNT=0.
Deleting now unused module ddr_out.
Deleting now unused module $paramod\blinky\CLK_HZ=12000000\BLINK_HZ=1.
Deleting now unused module dvi_serialiser.
Deleting now unused module smoldvi_top.
Deleting now unused module pll_12_126.

14.5. Executing TRIBUF pass.

14.6. Executing DEMINOUT pass (demote inout ports to input or output).

14.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module smoldvi_fpga.
<suppressed ~66 debug messages>

14.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..
Removed 56 unused cells and 296 unused wires.
<suppressed ~75 debug messages>

14.9. Executing CHECK pass (checking for obvious problems).
checking module smoldvi_fpga..
Warning: Wire smoldvi_fpga.\led [1] is used but has no driver.
found and reported 1 problems.

14.10. Executing OPT pass (performing simple optimizations).

14.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module smoldvi_fpga.

14.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\smoldvi_fpga'.
<suppressed ~126 debug messages>
Removed a total of 42 cells.

14.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \smoldvi_fpga..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

14.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \smoldvi_fpga.
Performed a total of 0 changes.

14.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\smoldvi_fpga'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

14.10.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$procdff$767 ($adff) from module smoldvi_fpga.
Replaced 1 DFF cells.

14.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..
Removed 0 unused cells and 41 unused wires.
<suppressed ~1 debug messages>

14.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module smoldvi_fpga.

14.10.9. Rerunning OPT passes. (Maybe there is more to do..)

14.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \smoldvi_fpga..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~34 debug messages>

14.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \smoldvi_fpga.
Performed a total of 0 changes.

14.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\smoldvi_fpga'.
Removed a total of 0 cells.

14.10.13. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$procdff$768 ($adff) from module smoldvi_fpga.
Replaced 1 DFF cells.

14.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..

14.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module smoldvi_fpga.
<suppressed ~4 debug messages>

14.10.16. Rerunning OPT passes. (Maybe there is more to do..)

14.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \smoldvi_fpga..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/5 on $pmux $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$procmux$693.
    dead port 2/5 on $pmux $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$procmux$693.
    dead port 3/5 on $pmux $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$procmux$693.
    dead port 5/5 on $pmux $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$procmux$693.
Removed 4 multiplexer ports.
<suppressed ~34 debug messages>

14.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \smoldvi_fpga.
Performed a total of 0 changes.

14.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\smoldvi_fpga'.
Removed a total of 0 cells.

14.10.20. Executing OPT_RMDFF pass (remove dff with constant values).

14.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

14.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module smoldvi_fpga.

14.10.23. Rerunning OPT passes. (Maybe there is more to do..)

14.10.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \smoldvi_fpga..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

14.10.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \smoldvi_fpga.
Performed a total of 0 changes.

14.10.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\smoldvi_fpga'.
Removed a total of 0 cells.

14.10.27. Executing OPT_RMDFF pass (remove dff with constant values).

14.10.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..

14.10.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module smoldvi_fpga.

14.10.30. Finished OPT passes. (There is nothing left to do.)

14.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 26 bits (of 32) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.ser_ck.gearbox_u.$shiftx$../hdl/libfpga/cdc/gearbox.v:0$550 ($shiftx).
Removed top 10 bits (of 20) from port A of cell smoldvi_fpga.$techmap\inst_smoldvi_top.ser_ck.gearbox_u.$shl$../hdl/libfpga/cdc/gearbox.v:0$540 ($shl).
Removed top 28 bits (of 31) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.ser_ck.gearbox_u.$mul$../hdl/libfpga/cdc/gearbox.v:64$534 ($mul).
Removed top 27 bits (of 31) from port Y of cell smoldvi_fpga.$techmap\inst_smoldvi_top.ser_ck.gearbox_u.$mul$../hdl/libfpga/cdc/gearbox.v:64$534 ($mul).
Removed top 1 bits (of 2) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$648_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$583_CMP0 ($eq).
Removed top 3 bits (of 9) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:132$519 ($eq).
Removed top 8 bits (of 9) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:127$518 ($eq).
Removed top 5 bits (of 9) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:122$517 ($eq).
Removed top 4 bits (of 10) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:88$511 ($eq).
Removed top 3 bits (of 10) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:83$510 ($eq).
Removed top 6 bits (of 10) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:78$509 ($eq).
Removed top 1 bits (of 2) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$696_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$115 ($sub).
Removed top 4 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$113 ($sub).
Removed top 2 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.$add$../hdl/libfpga/video/tmds_encode.v:98$111 ($add).
Removed top 4 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.$add$../hdl/libfpga/video/tmds_encode.v:98$109 ($add).
Removed top 1 bits (of 4) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.$lt$../hdl/libfpga/video/tmds_encode.v:96$105 ($lt).
Removed top 4 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.$lt$../hdl/libfpga/video/tmds_encode.v:96$104 ($lt).
Removed top 1 bits (of 4) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.$gt$../hdl/libfpga/video/tmds_encode.v:95$102 ($gt).
Removed top 4 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.$gt$../hdl/libfpga/video/tmds_encode.v:95$101 ($gt).
Removed top 2 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:94$100 ($sub).
Removed top 2 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.$add$../hdl/libfpga/video/tmds_encode.v:92$97 ($add).
Removed top 1 bits (of 4) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.$eq$../hdl/libfpga/video/tmds_encode.v:89$91 ($eq).
Removed top 1 bits (of 4) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.$eq$../hdl/libfpga/video/tmds_encode.v:47$67 ($eq).
Removed top 1 bits (of 4) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.$gt$../hdl/libfpga/video/tmds_encode.v:47$66 ($gt).
Removed top 2 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$115 ($sub).
Removed top 4 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$113 ($sub).
Removed top 2 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.$add$../hdl/libfpga/video/tmds_encode.v:98$111 ($add).
Removed top 4 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.$add$../hdl/libfpga/video/tmds_encode.v:98$109 ($add).
Removed top 1 bits (of 4) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.$lt$../hdl/libfpga/video/tmds_encode.v:96$105 ($lt).
Removed top 4 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.$lt$../hdl/libfpga/video/tmds_encode.v:96$104 ($lt).
Removed top 1 bits (of 4) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.$gt$../hdl/libfpga/video/tmds_encode.v:95$102 ($gt).
Removed top 4 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.$gt$../hdl/libfpga/video/tmds_encode.v:95$101 ($gt).
Removed top 2 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:94$100 ($sub).
Removed top 2 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.$add$../hdl/libfpga/video/tmds_encode.v:92$97 ($add).
Removed top 1 bits (of 4) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.$eq$../hdl/libfpga/video/tmds_encode.v:89$91 ($eq).
Removed top 1 bits (of 4) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.$eq$../hdl/libfpga/video/tmds_encode.v:47$67 ($eq).
Removed top 1 bits (of 4) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.$gt$../hdl/libfpga/video/tmds_encode.v:47$66 ($gt).
Removed top 2 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$115 ($sub).
Removed top 4 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$113 ($sub).
Removed top 2 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.$add$../hdl/libfpga/video/tmds_encode.v:98$111 ($add).
Removed top 4 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.$add$../hdl/libfpga/video/tmds_encode.v:98$109 ($add).
Removed top 1 bits (of 4) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.$lt$../hdl/libfpga/video/tmds_encode.v:96$105 ($lt).
Removed top 4 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.$lt$../hdl/libfpga/video/tmds_encode.v:96$104 ($lt).
Removed top 1 bits (of 4) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.$gt$../hdl/libfpga/video/tmds_encode.v:95$102 ($gt).
Removed top 4 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.$gt$../hdl/libfpga/video/tmds_encode.v:95$101 ($gt).
Removed top 2 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:94$100 ($sub).
Removed top 2 bits (of 5) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.$add$../hdl/libfpga/video/tmds_encode.v:92$97 ($add).
Removed top 1 bits (of 4) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.$eq$../hdl/libfpga/video/tmds_encode.v:89$91 ($eq).
Removed top 1 bits (of 4) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.$eq$../hdl/libfpga/video/tmds_encode.v:47$67 ($eq).
Removed top 1 bits (of 4) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.$gt$../hdl/libfpga/video/tmds_encode.v:47$66 ($gt).
Removed top 26 bits (of 32) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.ser_d2.gearbox_u.$shiftx$../hdl/libfpga/cdc/gearbox.v:0$550 ($shiftx).
Removed top 10 bits (of 20) from port Y of cell smoldvi_fpga.$techmap\inst_smoldvi_top.ser_d2.gearbox_u.$and$../hdl/libfpga/cdc/gearbox.v:0$537 ($and).
Removed top 28 bits (of 31) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.ser_d2.gearbox_u.$mul$../hdl/libfpga/cdc/gearbox.v:64$534 ($mul).
Removed top 27 bits (of 31) from port Y of cell smoldvi_fpga.$techmap\inst_smoldvi_top.ser_d2.gearbox_u.$mul$../hdl/libfpga/cdc/gearbox.v:64$534 ($mul).
Removed top 26 bits (of 32) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.ser_d1.gearbox_u.$shiftx$../hdl/libfpga/cdc/gearbox.v:0$550 ($shiftx).
Removed top 10 bits (of 20) from port Y of cell smoldvi_fpga.$techmap\inst_smoldvi_top.ser_d1.gearbox_u.$and$../hdl/libfpga/cdc/gearbox.v:0$537 ($and).
Removed top 28 bits (of 31) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.ser_d1.gearbox_u.$mul$../hdl/libfpga/cdc/gearbox.v:64$534 ($mul).
Removed top 27 bits (of 31) from port Y of cell smoldvi_fpga.$techmap\inst_smoldvi_top.ser_d1.gearbox_u.$mul$../hdl/libfpga/cdc/gearbox.v:64$534 ($mul).
Removed top 26 bits (of 32) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.ser_d0.gearbox_u.$shiftx$../hdl/libfpga/cdc/gearbox.v:0$550 ($shiftx).
Removed top 10 bits (of 20) from port Y of cell smoldvi_fpga.$techmap\inst_smoldvi_top.ser_d0.gearbox_u.$and$../hdl/libfpga/cdc/gearbox.v:0$537 ($and).
Removed top 28 bits (of 31) from port B of cell smoldvi_fpga.$techmap\inst_smoldvi_top.ser_d0.gearbox_u.$mul$../hdl/libfpga/cdc/gearbox.v:64$534 ($mul).
Removed top 27 bits (of 31) from port Y of cell smoldvi_fpga.$techmap\inst_smoldvi_top.ser_d0.gearbox_u.$mul$../hdl/libfpga/cdc/gearbox.v:64$534 ($mul).
Removed top 3 bits (of 4) from port A of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$561 ($add).
Removed top 2 bits (of 4) from port Y of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$561 ($add).
Removed top 3 bits (of 4) from port A of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$561 ($add).
Removed top 2 bits (of 4) from port Y of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$561 ($add).
Removed top 3 bits (of 4) from port A of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$561 ($add).
Removed top 2 bits (of 4) from port Y of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$561 ($add).
Removed top 3 bits (of 4) from port A of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$561 ($add).
Removed top 2 bits (of 4) from port Y of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$561 ($add).
Removed top 3 bits (of 4) from port A of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$561 ($add).
Removed top 2 bits (of 4) from port Y of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$561 ($add).
Removed top 3 bits (of 4) from port A of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$561 ($add).
Removed top 2 bits (of 4) from port Y of cell smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$561 ($add).
Removed top 2 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$561_Y.
Removed top 1 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$562_Y.
Removed top 1 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$563_Y.
Removed top 1 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$564_Y.
Removed top 1 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$566_Y.
Removed top 2 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$561_Y.
Removed top 1 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$562_Y.
Removed top 1 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$563_Y.
Removed top 1 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$564_Y.
Removed top 1 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$565_Y.
Removed top 1 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$566_Y.
Removed top 2 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$561_Y.
Removed top 1 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$562_Y.
Removed top 1 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$563_Y.
Removed top 1 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$564_Y.
Removed top 1 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$566_Y.
Removed top 3 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$561_Y.
Removed top 2 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$561_Y.
Removed top 1 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$562_Y.
Removed top 1 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$563_Y.
Removed top 1 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$564_Y.
Removed top 1 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$566_Y.
Removed top 3 bits (of 4) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$561_Y.
Removed top 27 bits (of 32) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.ser_ck.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:0$535_Y.
Removed top 27 bits (of 32) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.ser_d0.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:0$535_Y.
Removed top 10 bits (of 20) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.ser_d0.gearbox_u.$and$../hdl/libfpga/cdc/gearbox.v:0$537_Y.
Removed top 2 bits (of 20) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.ser_d0.gearbox_u.$not$../hdl/libfpga/cdc/gearbox.v:0$541_Y.
Removed top 27 bits (of 32) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.ser_d1.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:0$535_Y.
Removed top 10 bits (of 20) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.ser_d1.gearbox_u.$and$../hdl/libfpga/cdc/gearbox.v:0$537_Y.
Removed top 2 bits (of 20) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.ser_d1.gearbox_u.$not$../hdl/libfpga/cdc/gearbox.v:0$541_Y.
Removed top 27 bits (of 32) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.ser_d2.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:0$535_Y.
Removed top 10 bits (of 20) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.ser_d2.gearbox_u.$and$../hdl/libfpga/cdc/gearbox.v:0$537_Y.
Removed top 2 bits (of 20) from wire smoldvi_fpga.$techmap\inst_smoldvi_top.ser_d2.gearbox_u.$not$../hdl/libfpga/cdc/gearbox.v:0$541_Y.

14.12. Executing PEEPOPT pass (run peephole optimizers).

14.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..
Removed 0 unused cells and 33 unused wires.
<suppressed ~1 debug messages>

14.14. Executing SHARE pass (SAT-based resource sharing).

14.15. Executing TECHMAP pass (map to technology primitives).

14.15.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

14.15.2. Continuing TECHMAP pass.
Using template $paramod$85776c5c8886d6853e5f553eb04c82905cd16745\_90_lut_cmp_ for cells of type $lt.
Using template $paramod$8c983c643f10e61497154432370d0d99da8d68b0\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~123 debug messages>

14.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module smoldvi_fpga.

14.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..
Removed 0 unused cells and 27 unused wires.
<suppressed ~1 debug messages>

14.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module smoldvi_fpga:
  creating $macc model for $techmap\blink.$sub$../hdl/libfpga/common/blinky.v:59$493 ($sub).
  creating $macc model for $techmap\inst_smoldvi_top.$add$../hdl/smoldvi/smoldvi_top.v:35$7 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.$add$../hdl/smoldvi/smoldvi_top.v:37$8 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.$add$../hdl/smoldvi/smoldvi_top.v:40$9 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$add$../hdl/libfpga/video/dvi_timing.v:120$516 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$add$../hdl/libfpga/video/dvi_timing.v:75$505 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$add$../hdl/libfpga/video/tmds_encode.v:101$114 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$add$../hdl/libfpga/video/tmds_encode.v:92$97 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$add$../hdl/libfpga/video/tmds_encode.v:94$99 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$add$../hdl/libfpga/video/tmds_encode.v:98$109 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$add$../hdl/libfpga/video/tmds_encode.v:98$111 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$113 ($sub).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$115 ($sub).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:92$98 ($sub).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:94$100 ($sub).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:98$110 ($sub).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$561 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$562 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$563 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$564 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$565 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$566 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$567 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$561 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$562 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$563 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$564 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$565 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$566 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$567 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$add$../hdl/libfpga/video/tmds_encode.v:101$114 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$add$../hdl/libfpga/video/tmds_encode.v:92$97 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$add$../hdl/libfpga/video/tmds_encode.v:94$99 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$add$../hdl/libfpga/video/tmds_encode.v:98$109 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$add$../hdl/libfpga/video/tmds_encode.v:98$111 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$113 ($sub).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$115 ($sub).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:92$98 ($sub).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:94$100 ($sub).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:98$110 ($sub).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$561 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$562 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$563 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$564 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$565 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$566 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$567 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$561 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$562 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$563 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$564 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$565 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$566 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$567 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$add$../hdl/libfpga/video/tmds_encode.v:101$114 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$add$../hdl/libfpga/video/tmds_encode.v:92$97 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$add$../hdl/libfpga/video/tmds_encode.v:94$99 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$add$../hdl/libfpga/video/tmds_encode.v:98$109 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$add$../hdl/libfpga/video/tmds_encode.v:98$111 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$113 ($sub).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$115 ($sub).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:92$98 ($sub).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:94$100 ($sub).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:98$110 ($sub).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$561 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$562 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$563 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$564 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$565 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$566 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$567 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$561 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$562 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$563 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$564 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$565 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$566 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$567 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.ser_ck.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:63$533 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.ser_ck.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:78$547 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.ser_ck.gearbox_u.$mul$../hdl/libfpga/cdc/gearbox.v:64$534 ($mul).
  creating $macc model for $techmap\inst_smoldvi_top.ser_d0.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:63$533 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.ser_d0.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:78$547 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.ser_d0.gearbox_u.$mul$../hdl/libfpga/cdc/gearbox.v:64$534 ($mul).
  creating $macc model for $techmap\inst_smoldvi_top.ser_d1.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:63$533 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.ser_d1.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:78$547 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.ser_d1.gearbox_u.$mul$../hdl/libfpga/cdc/gearbox.v:64$534 ($mul).
  creating $macc model for $techmap\inst_smoldvi_top.ser_d2.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:63$533 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.ser_d2.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:78$547 ($add).
  creating $macc model for $techmap\inst_smoldvi_top.ser_d2.gearbox_u.$mul$../hdl/libfpga/cdc/gearbox.v:64$534 ($mul).
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$566 into $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$565 into $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$564 into $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$563 into $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$562 into $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$566 into $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$565 into $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$564 into $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$563 into $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$562 into $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$add$../hdl/libfpga/video/tmds_encode.v:98$109 into $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:98$110.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$add$../hdl/libfpga/video/tmds_encode.v:94$99 into $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:94$100.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$add$../hdl/libfpga/video/tmds_encode.v:92$97 into $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:92$98.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$add$../hdl/libfpga/video/tmds_encode.v:101$114 into $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$115.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$113 into $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$115.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:98$110 into $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$add$../hdl/libfpga/video/tmds_encode.v:98$111.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$566 into $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$565 into $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$564 into $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$563 into $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$562 into $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$566 into $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$565 into $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$564 into $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$563 into $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$562 into $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$add$../hdl/libfpga/video/tmds_encode.v:98$109 into $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:98$110.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$add$../hdl/libfpga/video/tmds_encode.v:94$99 into $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:94$100.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$add$../hdl/libfpga/video/tmds_encode.v:92$97 into $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:92$98.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$add$../hdl/libfpga/video/tmds_encode.v:101$114 into $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$115.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$113 into $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$115.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:98$110 into $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$add$../hdl/libfpga/video/tmds_encode.v:98$111.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$566 into $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$565 into $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$564 into $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$563 into $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$562 into $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$566 into $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$565 into $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$564 into $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$563 into $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$562 into $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$567.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$add$../hdl/libfpga/video/tmds_encode.v:98$109 into $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:98$110.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$add$../hdl/libfpga/video/tmds_encode.v:94$99 into $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:94$100.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$add$../hdl/libfpga/video/tmds_encode.v:92$97 into $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:92$98.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$add$../hdl/libfpga/video/tmds_encode.v:101$114 into $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$115.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$113 into $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$115.
  merging $macc model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:98$110 into $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$add$../hdl/libfpga/video/tmds_encode.v:98$111.
  creating $alu model for $macc $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$561.
  creating $alu model for $macc $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$561.
  creating $alu model for $macc $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$561.
  creating $alu model for $macc $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$561.
  creating $alu model for $macc $techmap\inst_smoldvi_top.ser_ck.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:63$533.
  creating $alu model for $macc $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$561.
  creating $alu model for $macc $techmap\inst_smoldvi_top.ser_ck.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:78$547.
  creating $alu model for $macc $techmap\inst_smoldvi_top.ser_d0.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:63$533.
  creating $alu model for $macc $techmap\inst_smoldvi_top.ser_d0.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:78$547.
  creating $alu model for $macc $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$561.
  creating $alu model for $macc $techmap\inst_smoldvi_top.ser_d2.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:78$547.
  creating $alu model for $macc $techmap\inst_smoldvi_top.ser_d1.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:63$533.
  creating $alu model for $macc $techmap\inst_smoldvi_top.ser_d1.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:78$547.
  creating $alu model for $macc $techmap\inst_smoldvi_top.ser_d2.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:63$533.
  creating $alu model for $macc $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$add$../hdl/libfpga/video/dvi_timing.v:75$505.
  creating $alu model for $macc $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$add$../hdl/libfpga/video/dvi_timing.v:120$516.
  creating $alu model for $macc $techmap\inst_smoldvi_top.$add$../hdl/smoldvi/smoldvi_top.v:40$9.
  creating $alu model for $macc $techmap\inst_smoldvi_top.$add$../hdl/smoldvi/smoldvi_top.v:37$8.
  creating $alu model for $macc $techmap\inst_smoldvi_top.$add$../hdl/smoldvi/smoldvi_top.v:35$7.
  creating $alu model for $macc $techmap\blink.$sub$../hdl/libfpga/common/blinky.v:59$493.
  creating $macc cell for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$567: $auto$alumacc.cc:365:replace_macc$825
  creating $macc cell for $techmap\inst_smoldvi_top.ser_ck.gearbox_u.$mul$../hdl/libfpga/cdc/gearbox.v:64$534: $auto$alumacc.cc:365:replace_macc$826
  creating $macc cell for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$567: $auto$alumacc.cc:365:replace_macc$827
  creating $macc cell for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$115: $auto$alumacc.cc:365:replace_macc$828
  creating $macc cell for $techmap\inst_smoldvi_top.ser_d0.gearbox_u.$mul$../hdl/libfpga/cdc/gearbox.v:64$534: $auto$alumacc.cc:365:replace_macc$829
  creating $macc cell for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$567: $auto$alumacc.cc:365:replace_macc$830
  creating $macc cell for $techmap\inst_smoldvi_top.ser_d2.gearbox_u.$mul$../hdl/libfpga/cdc/gearbox.v:64$534: $auto$alumacc.cc:365:replace_macc$831
  creating $macc cell for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:94$100: $auto$alumacc.cc:365:replace_macc$832
  creating $macc cell for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:92$98: $auto$alumacc.cc:365:replace_macc$833
  creating $macc cell for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$115: $auto$alumacc.cc:365:replace_macc$834
  creating $macc cell for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$567: $auto$alumacc.cc:365:replace_macc$835
  creating $macc cell for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$add$../hdl/libfpga/video/tmds_encode.v:98$111: $auto$alumacc.cc:365:replace_macc$836
  creating $macc cell for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:94$100: $auto$alumacc.cc:365:replace_macc$837
  creating $macc cell for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$add$../hdl/libfpga/video/tmds_encode.v:98$111: $auto$alumacc.cc:365:replace_macc$838
  creating $macc cell for $techmap\inst_smoldvi_top.ser_d1.gearbox_u.$mul$../hdl/libfpga/cdc/gearbox.v:64$534: $auto$alumacc.cc:365:replace_macc$839
  creating $macc cell for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$567: $auto$alumacc.cc:365:replace_macc$840
  creating $macc cell for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:101$115: $auto$alumacc.cc:365:replace_macc$841
  creating $macc cell for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:92$98: $auto$alumacc.cc:365:replace_macc$842
  creating $macc cell for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:94$100: $auto$alumacc.cc:365:replace_macc$843
  creating $macc cell for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$add$../hdl/libfpga/video/tmds_encode.v:98$111: $auto$alumacc.cc:365:replace_macc$844
  creating $macc cell for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$567: $auto$alumacc.cc:365:replace_macc$845
  creating $macc cell for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$sub$../hdl/libfpga/video/tmds_encode.v:92$98: $auto$alumacc.cc:365:replace_macc$846
  creating $alu model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$gt$../hdl/libfpga/video/tmds_encode.v:95$101 ($gt): new $alu
  creating $alu model for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$lt$../hdl/libfpga/video/tmds_encode.v:96$104 ($lt): merged with $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$gt$../hdl/libfpga/video/tmds_encode.v:95$101.
  creating $alu model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$gt$../hdl/libfpga/video/tmds_encode.v:95$101 ($gt): new $alu
  creating $alu model for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$lt$../hdl/libfpga/video/tmds_encode.v:96$104 ($lt): merged with $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$gt$../hdl/libfpga/video/tmds_encode.v:95$101.
  creating $alu model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$gt$../hdl/libfpga/video/tmds_encode.v:95$101 ($gt): new $alu
  creating $alu model for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$lt$../hdl/libfpga/video/tmds_encode.v:96$104 ($lt): merged with $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$gt$../hdl/libfpga/video/tmds_encode.v:95$101.
  creating $alu cell for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$gt$../hdl/libfpga/video/tmds_encode.v:95$101, $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$lt$../hdl/libfpga/video/tmds_encode.v:96$104: $auto$alumacc.cc:485:replace_alu$850
  creating $alu cell for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$gt$../hdl/libfpga/video/tmds_encode.v:95$101, $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$lt$../hdl/libfpga/video/tmds_encode.v:96$104: $auto$alumacc.cc:485:replace_alu$863
  creating $alu cell for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$gt$../hdl/libfpga/video/tmds_encode.v:95$101, $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$lt$../hdl/libfpga/video/tmds_encode.v:96$104: $auto$alumacc.cc:485:replace_alu$876
  creating $alu cell for $techmap\blink.$sub$../hdl/libfpga/common/blinky.v:59$493: $auto$alumacc.cc:485:replace_alu$889
  creating $alu cell for $techmap\inst_smoldvi_top.$add$../hdl/smoldvi/smoldvi_top.v:35$7: $auto$alumacc.cc:485:replace_alu$892
  creating $alu cell for $techmap\inst_smoldvi_top.$add$../hdl/smoldvi/smoldvi_top.v:37$8: $auto$alumacc.cc:485:replace_alu$895
  creating $alu cell for $techmap\inst_smoldvi_top.$add$../hdl/smoldvi/smoldvi_top.v:40$9: $auto$alumacc.cc:485:replace_alu$898
  creating $alu cell for $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$add$../hdl/libfpga/video/dvi_timing.v:120$516: $auto$alumacc.cc:485:replace_alu$901
  creating $alu cell for $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$add$../hdl/libfpga/video/dvi_timing.v:75$505: $auto$alumacc.cc:485:replace_alu$904
  creating $alu cell for $techmap\inst_smoldvi_top.ser_d2.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:63$533: $auto$alumacc.cc:485:replace_alu$907
  creating $alu cell for $techmap\inst_smoldvi_top.ser_d1.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:78$547: $auto$alumacc.cc:485:replace_alu$910
  creating $alu cell for $techmap\inst_smoldvi_top.ser_d1.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:63$533: $auto$alumacc.cc:485:replace_alu$913
  creating $alu cell for $techmap\inst_smoldvi_top.ser_d2.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:78$547: $auto$alumacc.cc:485:replace_alu$916
  creating $alu cell for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$561: $auto$alumacc.cc:485:replace_alu$919
  creating $alu cell for $techmap\inst_smoldvi_top.ser_d0.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:78$547: $auto$alumacc.cc:485:replace_alu$922
  creating $alu cell for $techmap\inst_smoldvi_top.ser_d0.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:63$533: $auto$alumacc.cc:485:replace_alu$925
  creating $alu cell for $techmap\inst_smoldvi_top.ser_ck.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:78$547: $auto$alumacc.cc:485:replace_alu$928
  creating $alu cell for $techmap\inst_smoldvi_top.dvi.tmds0_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$561: $auto$alumacc.cc:485:replace_alu$931
  creating $alu cell for $techmap\inst_smoldvi_top.ser_ck.gearbox_u.$add$../hdl/libfpga/cdc/gearbox.v:63$533: $auto$alumacc.cc:485:replace_alu$934
  creating $alu cell for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$561: $auto$alumacc.cc:485:replace_alu$937
  creating $alu cell for $techmap\inst_smoldvi_top.dvi.tmds2_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$561: $auto$alumacc.cc:485:replace_alu$940
  creating $alu cell for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_q_m.$add$../hdl/libfpga/common/popcount.v:36$561: $auto$alumacc.cc:485:replace_alu$943
  creating $alu cell for $techmap\inst_smoldvi_top.dvi.tmds1_encoder.popcount_d.$add$../hdl/libfpga/common/popcount.v:36$561: $auto$alumacc.cc:485:replace_alu$946
  created 23 $alu and 22 $macc cells.

14.19. Executing OPT pass (performing simple optimizations).

14.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module smoldvi_fpga.

14.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\smoldvi_fpga'.
Removed a total of 0 cells.

14.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \smoldvi_fpga..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

14.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \smoldvi_fpga.
Performed a total of 0 changes.

14.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\smoldvi_fpga'.
Removed a total of 0 cells.

14.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

14.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..
Removed 48 unused cells and 54 unused wires.
<suppressed ~49 debug messages>

14.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module smoldvi_fpga.

14.19.9. Rerunning OPT passes. (Maybe there is more to do..)

14.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \smoldvi_fpga..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

14.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \smoldvi_fpga.
Performed a total of 0 changes.

14.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\smoldvi_fpga'.
Removed a total of 0 cells.

14.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

14.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..

14.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module smoldvi_fpga.

14.19.16. Finished OPT passes. (There is nothing left to do.)

14.20. Executing FSM pass (extract and optimize FSM).

14.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register smoldvi_fpga.inst_smoldvi_top.dvi.inst_dvi_timing.h_state.
Found FSM state register smoldvi_fpga.inst_smoldvi_top.dvi.inst_dvi_timing.v_state.

14.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\inst_smoldvi_top.dvi.inst_dvi_timing.h_state' from module `\smoldvi_fpga'.
  found $adff cell for state register: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procdff$763
  root of input selection tree: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$0\h_state[1:0]
  found reset state: 2'00 (from async reset)
  found ctrl input: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:76$506_Y
  found ctrl input: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$645_CMP
  found ctrl input: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$648_CMP
  found ctrl input: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$651_CMP
  found ctrl input: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:93$512_Y
  found ctrl input: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:88$511_Y
  found state code: 2'11
  found ctrl input: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:83$510_Y
  found state code: 2'10
  found ctrl input: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:78$509_Y
  found state code: 2'01
  found ctrl output: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$651_CMP
  found ctrl output: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$648_CMP
  found ctrl output: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$645_CMP
  found ctrl output: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:76$506_Y
  ctrl inputs: { $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:78$509_Y $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:83$510_Y $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:88$511_Y $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:93$512_Y }
  ctrl outputs: { $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$0\h_state[1:0] $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:76$506_Y $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$645_CMP $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$648_CMP $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$651_CMP }
  transition:       2'00 4'0--- ->       2'00 6'000001
  transition:       2'00 4'1--- ->       2'01 6'010001
  transition:       2'10 4'--0- ->       2'10 6'100100
  transition:       2'10 4'--1- ->       2'11 6'110100
  transition:       2'01 4'-0-- ->       2'01 6'010010
  transition:       2'01 4'-1-- ->       2'10 6'100010
  transition:       2'11 4'---0 ->       2'11 6'111000
  transition:       2'11 4'---1 ->       2'00 6'001000
Extracting FSM `\inst_smoldvi_top.dvi.inst_dvi_timing.v_state' from module `\smoldvi_fpga'.
  found $adff cell for state register: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procdff$759
  root of input selection tree: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$0\v_state[1:0]
  found reset state: 2'00 (from async reset)
  found ctrl input: \inst_smoldvi_top.dvi.inst_dvi_timing.v_advance
  found ctrl input: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$577_CMP
  found ctrl input: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$580_CMP
  found ctrl input: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$583_CMP
  found ctrl input: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$586_CMP
  found ctrl input: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:137$520_Y
  found ctrl input: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:132$519_Y
  found state code: 2'11
  found ctrl input: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:127$518_Y
  found state code: 2'10
  found ctrl input: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:122$517_Y
  found state code: 2'01
  found ctrl output: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$586_CMP
  found ctrl output: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$583_CMP
  found ctrl output: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$580_CMP
  found ctrl output: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$577_CMP
  ctrl inputs: { \inst_smoldvi_top.dvi.inst_dvi_timing.v_advance $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:122$517_Y $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:127$518_Y $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:132$519_Y $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:137$520_Y }
  ctrl outputs: { $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$0\v_state[1:0] $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$577_CMP $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$580_CMP $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$583_CMP $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$586_CMP }
  transition:       2'00 5'0---- ->       2'00 6'000001
  transition:       2'00 5'10--- ->       2'00 6'000001
  transition:       2'00 5'11--- ->       2'01 6'010001
  transition:       2'10 5'0---- ->       2'10 6'100100
  transition:       2'10 5'1--0- ->       2'10 6'100100
  transition:       2'10 5'1--1- ->       2'11 6'110100
  transition:       2'01 5'0---- ->       2'01 6'010010
  transition:       2'01 5'1-0-- ->       2'01 6'010010
  transition:       2'01 5'1-1-- ->       2'10 6'100010
  transition:       2'11 5'0---- ->       2'11 6'111000
  transition:       2'11 5'1---0 ->       2'11 6'111000
  transition:       2'11 5'1---1 ->       2'00 6'001000

14.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\inst_smoldvi_top.dvi.inst_dvi_timing.v_state$955' from module `\smoldvi_fpga'.
Optimizing FSM `$fsm$\inst_smoldvi_top.dvi.inst_dvi_timing.h_state$949' from module `\smoldvi_fpga'.

14.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..
Removed 21 unused cells and 21 unused wires.
<suppressed ~22 debug messages>

14.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\inst_smoldvi_top.dvi.inst_dvi_timing.h_state$949' from module `\smoldvi_fpga'.
  Removing unused output signal $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$0\h_state[1:0] [0].
  Removing unused output signal $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$0\h_state[1:0] [1].
Optimizing FSM `$fsm$\inst_smoldvi_top.dvi.inst_dvi_timing.v_state$955' from module `\smoldvi_fpga'.
  Removing unused output signal $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$0\v_state[1:0] [0].
  Removing unused output signal $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$0\v_state[1:0] [1].

14.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\inst_smoldvi_top.dvi.inst_dvi_timing.h_state$949' from module `\smoldvi_fpga' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> ---1
  10 -> --1-
  01 -> -1--
  11 -> 1---
Recoding FSM `$fsm$\inst_smoldvi_top.dvi.inst_dvi_timing.v_state$955' from module `\smoldvi_fpga' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> ---1
  10 -> --1-
  01 -> -1--
  11 -> 1---

14.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\inst_smoldvi_top.dvi.inst_dvi_timing.h_state$949' from module `smoldvi_fpga':
-------------------------------------

  Information on FSM $fsm$\inst_smoldvi_top.dvi.inst_dvi_timing.h_state$949 (\inst_smoldvi_top.dvi.inst_dvi_timing.h_state):

  Number of input signals:    4
  Number of output signals:   4
  Number of state bits:       4

  Input signals:
    0: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:93$512_Y
    1: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:88$511_Y
    2: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:83$510_Y
    3: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:78$509_Y

  Output signals:
    0: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$651_CMP
    1: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$648_CMP
    2: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$645_CMP
    3: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:76$506_Y

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 4'0---   ->     0 4'0001
      1:     0 4'1---   ->     2 4'0001
      2:     1 4'--0-   ->     1 4'0100
      3:     1 4'--1-   ->     3 4'0100
      4:     2 4'-1--   ->     1 4'0010
      5:     2 4'-0--   ->     2 4'0010
      6:     3 4'---1   ->     0 4'1000
      7:     3 4'---0   ->     3 4'1000

-------------------------------------

FSM `$fsm$\inst_smoldvi_top.dvi.inst_dvi_timing.v_state$955' from module `smoldvi_fpga':
-------------------------------------

  Information on FSM $fsm$\inst_smoldvi_top.dvi.inst_dvi_timing.v_state$955 (\inst_smoldvi_top.dvi.inst_dvi_timing.v_state):

  Number of input signals:    5
  Number of output signals:   4
  Number of state bits:       4

  Input signals:
    0: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:137$520_Y
    1: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:132$519_Y
    2: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:127$518_Y
    3: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$eq$../hdl/libfpga/video/dvi_timing.v:122$517_Y
    4: \inst_smoldvi_top.dvi.inst_dvi_timing.v_advance

  Output signals:
    0: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$586_CMP
    1: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$583_CMP
    2: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$580_CMP
    3: $techmap\inst_smoldvi_top.dvi.inst_dvi_timing.$procmux$577_CMP

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 5'10---   ->     0 4'0001
      1:     0 5'0----   ->     0 4'0001
      2:     0 5'11---   ->     2 4'0001
      3:     1 5'1--0-   ->     1 4'0100
      4:     1 5'0----   ->     1 4'0100
      5:     1 5'1--1-   ->     3 4'0100
      6:     2 5'1-1--   ->     1 4'0010
      7:     2 5'1-0--   ->     2 4'0010
      8:     2 5'0----   ->     2 4'0010
      9:     3 5'1---1   ->     0 4'1000
     10:     3 5'1---0   ->     3 4'1000
     11:     3 5'0----   ->     3 4'1000

-------------------------------------

14.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\inst_smoldvi_top.dvi.inst_dvi_timing.h_state$949' from module `\smoldvi_fpga'.
Mapping FSM `$fsm$\inst_smoldvi_top.dvi.inst_dvi_timing.v_state$955' from module `\smoldvi_fpga'.

14.21. Executing OPT pass (performing simple optimizations).

14.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module smoldvi_fpga.
<suppressed ~12 debug messages>

14.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\smoldvi_fpga'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

14.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

14.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..
Removed 0 unused cells and 21 unused wires.
<suppressed ~1 debug messages>

14.21.5. Finished fast OPT passes.

14.22. Executing MEMORY pass.

14.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

14.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

14.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..

14.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

14.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..

14.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).

14.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..

14.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

14.25. Executing TECHMAP pass (map to technology primitives).

14.25.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

14.25.2. Continuing TECHMAP pass.
No more expansions possible.

14.26. Executing ICE40_BRAMINIT pass.

14.27. Executing OPT pass (performing simple optimizations).

14.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module smoldvi_fpga.
<suppressed ~8 debug messages>

14.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\smoldvi_fpga'.
Removed a total of 0 cells.

14.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

14.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..
Removed 1 unused cells and 4 unused wires.
<suppressed ~2 debug messages>

14.27.5. Finished fast OPT passes.

14.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

14.29. Executing OPT pass (performing simple optimizations).

14.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module smoldvi_fpga.

14.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\smoldvi_fpga'.
Removed a total of 0 cells.

14.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \smoldvi_fpga..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~31 debug messages>

14.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \smoldvi_fpga.
    Consolidated identical input bits for $pmux cell $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$693:
      Old ports: A=10'1101010100, B=30'001010101101010101001010101011, Y=$techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$693_Y
      New ports: A=3'110, B=9'001010101, Y={ $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$693_Y [9] $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$693_Y [2] $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$693_Y [0] }
      New connections: { $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$693_Y [8:3] $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$693_Y [1] } = { $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$693_Y [2] $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$693_Y [0] $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$693_Y [2] $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$693_Y [0] $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$693_Y [2] $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$693_Y [0] $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$693_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$713:
      Old ports: A={ 1'0 \inst_smoldvi_top.dvi.tmds0_encoder.q_m }, B={ 1'1 \inst_smoldvi_top.dvi.tmds0_encoder.q_m [8] $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$not$../hdl/libfpga/video/tmds_encode.v:90$93_Y }, Y=$techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$713_Y
      New ports: A={ 1'0 \inst_smoldvi_top.dvi.tmds0_encoder.q_m [7:0] }, B={ 1'1 $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$not$../hdl/libfpga/video/tmds_encode.v:90$93_Y }, Y={ $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$713_Y [9] $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$713_Y [7:0] }
      New connections: $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$713_Y [8] = \inst_smoldvi_top.dvi.tmds0_encoder.q_m [8]
    Consolidated identical input bits for $mux cell $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$719:
      Old ports: A={ 1'1 $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$84_Y $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$76_Y $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$82_Y $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$74_Y $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$80_Y $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$72_Y $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$78_Y \inst_smoldvi_top.frame_ctr [0] }, B={ 1'0 $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$77_Y $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$76_Y $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$75_Y $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$74_Y $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$73_Y $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$72_Y $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$71_Y \inst_smoldvi_top.frame_ctr [0] }, Y=$techmap\inst_smoldvi_top.dvi.tmds0_encoder.$0\q_m[8:0]
      New ports: A={ 1'1 $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$84_Y $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$82_Y $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$80_Y $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$78_Y }, B={ 1'0 $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$77_Y $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$75_Y $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$73_Y $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$71_Y }, Y={ $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$0\q_m[8:0] [8:7] $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$0\q_m[8:0] [5] $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$0\q_m[8:0] [3] $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$0\q_m[8:0] [1] }
      New connections: { $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$0\q_m[8:0] [6] $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$0\q_m[8:0] [4] $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$0\q_m[8:0] [2] $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$0\q_m[8:0] [0] } = { $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$76_Y $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$74_Y $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$72_Y \inst_smoldvi_top.frame_ctr [0] }
    Consolidated identical input bits for $mux cell $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$procmux$713:
      Old ports: A={ 1'0 \inst_smoldvi_top.dvi.tmds1_encoder.q_m }, B={ 1'1 \inst_smoldvi_top.dvi.tmds1_encoder.q_m [8] $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$not$../hdl/libfpga/video/tmds_encode.v:90$93_Y }, Y=$techmap\inst_smoldvi_top.dvi.tmds1_encoder.$procmux$713_Y
      New ports: A={ 1'0 \inst_smoldvi_top.dvi.tmds1_encoder.q_m [7:0] }, B={ 1'1 $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$not$../hdl/libfpga/video/tmds_encode.v:90$93_Y }, Y={ $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$procmux$713_Y [9] $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$procmux$713_Y [7:0] }
      New connections: $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$procmux$713_Y [8] = \inst_smoldvi_top.dvi.tmds1_encoder.q_m [8]
    Consolidated identical input bits for $mux cell $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$procmux$719:
      Old ports: A={ 1'1 $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$84_Y $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$76_Y $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$82_Y $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$74_Y $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$80_Y $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$72_Y $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$78_Y \inst_smoldvi_top.y_ctr [0] }, B={ 1'0 $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$77_Y $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$76_Y $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$75_Y $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$74_Y $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$73_Y $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$72_Y $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$71_Y \inst_smoldvi_top.y_ctr [0] }, Y=$techmap\inst_smoldvi_top.dvi.tmds1_encoder.$0\q_m[8:0]
      New ports: A={ 1'1 $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$84_Y $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$82_Y $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$80_Y $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$78_Y }, B={ 1'0 $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$77_Y $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$75_Y $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$73_Y $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$71_Y }, Y={ $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$0\q_m[8:0] [8:7] $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$0\q_m[8:0] [5] $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$0\q_m[8:0] [3] $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$0\q_m[8:0] [1] }
      New connections: { $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$0\q_m[8:0] [6] $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$0\q_m[8:0] [4] $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$0\q_m[8:0] [2] $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$0\q_m[8:0] [0] } = { $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$76_Y $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$74_Y $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$72_Y \inst_smoldvi_top.y_ctr [0] }
    Consolidated identical input bits for $mux cell $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$procmux$713:
      Old ports: A={ 1'0 \inst_smoldvi_top.dvi.tmds2_encoder.q_m }, B={ 1'1 \inst_smoldvi_top.dvi.tmds2_encoder.q_m [8] $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$not$../hdl/libfpga/video/tmds_encode.v:90$93_Y }, Y=$techmap\inst_smoldvi_top.dvi.tmds2_encoder.$procmux$713_Y
      New ports: A={ 1'0 \inst_smoldvi_top.dvi.tmds2_encoder.q_m [7:0] }, B={ 1'1 $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$not$../hdl/libfpga/video/tmds_encode.v:90$93_Y }, Y={ $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$procmux$713_Y [9] $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$procmux$713_Y [7:0] }
      New connections: $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$procmux$713_Y [8] = \inst_smoldvi_top.dvi.tmds2_encoder.q_m [8]
    Consolidated identical input bits for $mux cell $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$procmux$719:
      Old ports: A={ 1'1 $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$84_Y $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$76_Y $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$82_Y $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$74_Y $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$80_Y $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$72_Y $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$78_Y \inst_smoldvi_top.x_ctr [0] }, B={ 1'0 $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$77_Y $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$76_Y $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$75_Y $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$74_Y $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$73_Y $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$72_Y $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$71_Y \inst_smoldvi_top.x_ctr [0] }, Y=$techmap\inst_smoldvi_top.dvi.tmds2_encoder.$0\q_m[8:0]
      New ports: A={ 1'1 $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$84_Y $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$82_Y $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$80_Y $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:50$78_Y }, B={ 1'0 $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$77_Y $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$75_Y $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$73_Y $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xnor$../hdl/libfpga/video/tmds_encode.v:48$71_Y }, Y={ $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$0\q_m[8:0] [8:7] $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$0\q_m[8:0] [5] $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$0\q_m[8:0] [3] $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$0\q_m[8:0] [1] }
      New connections: { $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$0\q_m[8:0] [6] $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$0\q_m[8:0] [4] $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$0\q_m[8:0] [2] $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$0\q_m[8:0] [0] } = { $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$76_Y $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$74_Y $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$reduce_xor$../hdl/libfpga/video/tmds_encode.v:48$72_Y \inst_smoldvi_top.x_ctr [0] }
  Optimizing cells in module \smoldvi_fpga.
    Consolidated identical input bits for $mux cell $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$716:
      Old ports: A=$techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$713_Y, B={ $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$logic_not$../hdl/libfpga/video/tmds_encode.v:101$112_Y \inst_smoldvi_top.dvi.tmds0_encoder.q_m [8] $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$ternary$../hdl/libfpga/video/tmds_encode.v:90$94_Y }, Y=$techmap\inst_smoldvi_top.dvi.tmds0_encoder.$0\q_m_inv[9:0]
      New ports: A={ $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$713_Y [9] $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$procmux$713_Y [7:0] }, B={ $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$logic_not$../hdl/libfpga/video/tmds_encode.v:101$112_Y $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$ternary$../hdl/libfpga/video/tmds_encode.v:90$94_Y }, Y={ $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$0\q_m_inv[9:0] [9] $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$0\q_m_inv[9:0] [7:0] }
      New connections: $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$0\q_m_inv[9:0] [8] = \inst_smoldvi_top.dvi.tmds0_encoder.q_m [8]
    Consolidated identical input bits for $mux cell $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$procmux$716:
      Old ports: A=$techmap\inst_smoldvi_top.dvi.tmds1_encoder.$procmux$713_Y, B={ $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$logic_not$../hdl/libfpga/video/tmds_encode.v:101$112_Y \inst_smoldvi_top.dvi.tmds1_encoder.q_m [8] $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$ternary$../hdl/libfpga/video/tmds_encode.v:90$94_Y }, Y=$techmap\inst_smoldvi_top.dvi.tmds1_encoder.$0\q_m_inv[9:0]
      New ports: A={ $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$procmux$713_Y [9] $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$procmux$713_Y [7:0] }, B={ $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$logic_not$../hdl/libfpga/video/tmds_encode.v:101$112_Y $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$ternary$../hdl/libfpga/video/tmds_encode.v:90$94_Y }, Y={ $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$0\q_m_inv[9:0] [9] $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$0\q_m_inv[9:0] [7:0] }
      New connections: $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$0\q_m_inv[9:0] [8] = \inst_smoldvi_top.dvi.tmds1_encoder.q_m [8]
    Consolidated identical input bits for $mux cell $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$procmux$716:
      Old ports: A=$techmap\inst_smoldvi_top.dvi.tmds2_encoder.$procmux$713_Y, B={ $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$logic_not$../hdl/libfpga/video/tmds_encode.v:101$112_Y \inst_smoldvi_top.dvi.tmds2_encoder.q_m [8] $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$ternary$../hdl/libfpga/video/tmds_encode.v:90$94_Y }, Y=$techmap\inst_smoldvi_top.dvi.tmds2_encoder.$0\q_m_inv[9:0]
      New ports: A={ $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$procmux$713_Y [9] $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$procmux$713_Y [7:0] }, B={ $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$logic_not$../hdl/libfpga/video/tmds_encode.v:101$112_Y $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$ternary$../hdl/libfpga/video/tmds_encode.v:90$94_Y }, Y={ $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$0\q_m_inv[9:0] [9] $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$0\q_m_inv[9:0] [7:0] }
      New connections: $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$0\q_m_inv[9:0] [8] = \inst_smoldvi_top.dvi.tmds2_encoder.q_m [8]
  Optimizing cells in module \smoldvi_fpga.
Performed a total of 10 changes.

14.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\smoldvi_fpga'.
Removed a total of 0 cells.

14.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

14.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

14.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module smoldvi_fpga.

14.29.9. Rerunning OPT passes. (Maybe there is more to do..)

14.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \smoldvi_fpga..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~31 debug messages>

14.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \smoldvi_fpga.
Performed a total of 0 changes.

14.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\smoldvi_fpga'.
Removed a total of 0 cells.

14.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

14.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..

14.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module smoldvi_fpga.

14.29.16. Finished OPT passes. (There is nothing left to do.)

14.30. Executing ICE40_WRAPCARRY pass (wrap carries).

14.31. Executing TECHMAP pass (map to technology primitives).

14.31.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

14.31.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

14.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=9\Y_WIDTH=9 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$23a94465eb102cb1376c4293423880122b9507d6\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using template $paramod$constmap:390f97c4b8e03e5fe22b13ea746417a0c5ffcbdf$paramod$efaa35a50dd0f7f1f10e246128ab90978b912ab4\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'1
  Constant input on bit 1 of port A: 1'1
  Constant input on bit 2 of port A: 1'1
  Constant input on bit 3 of port A: 1'1
  Constant input on bit 4 of port A: 1'1
  Constant input on bit 5 of port A: 1'1
  Constant input on bit 6 of port A: 1'1
  Constant input on bit 7 of port A: 1'1
  Constant input on bit 8 of port A: 1'1
  Constant input on bit 9 of port A: 1'1
  Constant input on bit 0 of port B: 1'0
  Constant input on bit 5 of port B: 1'0
  Constant input on bit 6 of port B: 1'0
  Constant input on bit 7 of port B: 1'0
  Constant input on bit 8 of port B: 1'0
  Constant input on bit 9 of port B: 1'0
  Constant input on bit 10 of port B: 1'0
  Constant input on bit 11 of port B: 1'0
  Constant input on bit 12 of port B: 1'0
  Constant input on bit 13 of port B: 1'0
  Constant input on bit 14 of port B: 1'0
  Constant input on bit 15 of port B: 1'0
  Constant input on bit 16 of port B: 1'0
  Constant input on bit 17 of port B: 1'0
  Constant input on bit 18 of port B: 1'0
  Constant input on bit 19 of port B: 1'0
  Constant input on bit 20 of port B: 1'0
  Constant input on bit 21 of port B: 1'0
  Constant input on bit 22 of port B: 1'0
  Constant input on bit 23 of port B: 1'0
  Constant input on bit 24 of port B: 1'0
  Constant input on bit 25 of port B: 1'0
  Constant input on bit 26 of port B: 1'0
  Constant input on bit 27 of port B: 1'0
  Constant input on bit 28 of port B: 1'0
  Constant input on bit 29 of port B: 1'0
  Constant input on bit 30 of port B: 1'0
  Constant input on bit 31 of port B: 1'0
Creating constmapped module `$paramod$constmap:e74629075d55d98f16afc5f9725ae7f65104ef99$paramod$efaa35a50dd0f7f1f10e246128ab90978b912ab4\_90_shift_ops_shr_shl_sshl_sshr'.

14.31.20. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:e74629075d55d98f16afc5f9725ae7f65104ef99$paramod$efaa35a50dd0f7f1f10e246128ab90978b912ab4\_90_shift_ops_shr_shl_sshl_sshr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~566 debug messages>

14.31.21. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:e74629075d55d98f16afc5f9725ae7f65104ef99$paramod$efaa35a50dd0f7f1f10e246128ab90978b912ab4\_90_shift_ops_shr_shl_sshl_sshr.
<suppressed ~235 debug messages>
Removed 0 unused cells and 18 unused wires.
Using template $paramod$constmap:e74629075d55d98f16afc5f9725ae7f65104ef99$paramod$efaa35a50dd0f7f1f10e246128ab90978b912ab4\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper maccmap for cells of type $macc.
  add $auto$wreduce.cc:460:run$786 [1:0] (2 bits, unsigned)
  add bits { \inst_smoldvi_top.dvi.tmds0_encoder.q_m [2] \inst_smoldvi_top.dvi.tmds0_encoder.q_m [3] \inst_smoldvi_top.dvi.tmds0_encoder.q_m [4] \inst_smoldvi_top.dvi.tmds0_encoder.q_m [5] \inst_smoldvi_top.dvi.tmds0_encoder.q_m [6] \inst_smoldvi_top.dvi.tmds0_encoder.q_m [7] } (6 bits)
  packed 3 (3) bits / 3 words into adder tree
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=10\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=9\S_WIDTH=4 for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=1 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=3 for cells of type $pmux.
  add $auto$wreduce.cc:460:run$797 [1:0] (2 bits, unsigned)
  add bits { \inst_smoldvi_top.dvi.tmds1_encoder.q_m [2] \inst_smoldvi_top.dvi.tmds1_encoder.q_m [3] \inst_smoldvi_top.dvi.tmds1_encoder.q_m [4] \inst_smoldvi_top.dvi.tmds1_encoder.q_m [5] \inst_smoldvi_top.dvi.tmds1_encoder.q_m [6] \inst_smoldvi_top.dvi.tmds1_encoder.q_m [7] } (6 bits)
  packed 3 (3) bits / 3 words into adder tree
  add \inst_smoldvi_top.dvi.tmds2_encoder.imbalance (5 bits, unsigned)
  add \inst_smoldvi_top.dvi.tmds2_encoder.q_m_count (4 bits, unsigned)
  add 5'11100 (5 bits, unsigned)
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=23\B_WIDTH=1\Y_WIDTH=23 for cells of type $alu.
  add \inst_smoldvi_top.dvi.tmds0_encoder.imbalance (5 bits, unsigned)
  sub \inst_smoldvi_top.dvi.tmds0_encoder.q_m_count (4 bits, unsigned)
  add 5'00100 (5 bits, unsigned)
  add \inst_smoldvi_top.dvi.tmds0_encoder.imbalance (5 bits, unsigned)
  add \inst_smoldvi_top.dvi.tmds0_encoder.q_m_count (4 bits, unsigned)
  sub $techmap\inst_smoldvi_top.dvi.tmds0_encoder.$logic_not$../hdl/libfpga/video/tmds_encode.v:101$112_Y (1 bits, unsigned)
  add 5'11100 (5 bits, unsigned)
Using extmapper simplemap for cells of type $reduce_xor.
Using extmapper simplemap for cells of type $reduce_xnor.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using extmapper simplemap for cells of type $lut.
  add \inst_smoldvi_top.dvi.tmds1_encoder.imbalance (5 bits, unsigned)
  sub \inst_smoldvi_top.dvi.tmds1_encoder.q_m_count (4 bits, unsigned)
  add 5'00100 (5 bits, unsigned)
  add 3'101 * \inst_smoldvi_top.ser_d1.gearbox_u.in_ptr (3x1 bits, unsigned)
  add \inst_smoldvi_top.dvi.tmds2_encoder.imbalance (5 bits, unsigned)
  sub \inst_smoldvi_top.dvi.tmds2_encoder.q_m_count (4 bits, unsigned)
  add 5'00100 (5 bits, unsigned)
  add bits \inst_smoldvi_top.dvi.tmds2_encoder.q_m [8] (1 bits)
  packed 1 (1) bits / 1 words into adder tree
  add \inst_smoldvi_top.dvi.tmds1_encoder.imbalance (5 bits, unsigned)
  add \inst_smoldvi_top.dvi.tmds1_encoder.q_m_count (4 bits, unsigned)
  add 5'11100 (5 bits, unsigned)
  add $auto$wreduce.cc:460:run$803 [1:0] (2 bits, unsigned)
  add bits { \inst_smoldvi_top.dvi.tmds2_encoder.q_m [2] \inst_smoldvi_top.dvi.tmds2_encoder.q_m [3] \inst_smoldvi_top.dvi.tmds2_encoder.q_m [4] \inst_smoldvi_top.dvi.tmds2_encoder.q_m [5] \inst_smoldvi_top.dvi.tmds2_encoder.q_m [6] \inst_smoldvi_top.dvi.tmds2_encoder.q_m [7] } (6 bits)
  packed 3 (3) bits / 3 words into adder tree
  add 3'101 * \inst_smoldvi_top.ser_d0.gearbox_u.in_ptr (3x1 bits, unsigned)
  add $auto$wreduce.cc:460:run$781 [1:0] (2 bits, unsigned)
  add bits { \inst_smoldvi_top.frame_ctr [2] \inst_smoldvi_top.frame_ctr [3] \inst_smoldvi_top.frame_ctr [4] \inst_smoldvi_top.frame_ctr [5] \inst_smoldvi_top.frame_ctr [6] \inst_smoldvi_top.frame_ctr [7] } (6 bits)
  packed 3 (3) bits / 3 words into adder tree
  add \inst_smoldvi_top.dvi.tmds1_encoder.imbalance (5 bits, unsigned)
  sub \inst_smoldvi_top.dvi.tmds1_encoder.q_m_count (4 bits, unsigned)
  add 5'00100 (5 bits, unsigned)
  add bits \inst_smoldvi_top.dvi.tmds1_encoder.q_m [8] (1 bits)
  packed 1 (1) bits / 1 words into adder tree
Using template $paramod$constmap:f7dcc9dbc69f1adb9b970f1d9a15ec4a15bd6163$paramod$31f5dd1a9f4b5829ab00a51691f1cbb7d3ee03ef\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
  add \inst_smoldvi_top.dvi.tmds0_encoder.imbalance (5 bits, unsigned)
  add \inst_smoldvi_top.dvi.tmds0_encoder.q_m_count (4 bits, unsigned)
  add 5'11100 (5 bits, unsigned)
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
  add $auto$wreduce.cc:460:run$792 [1:0] (2 bits, unsigned)
  add bits { \inst_smoldvi_top.y_ctr [2] \inst_smoldvi_top.y_ctr [3] \inst_smoldvi_top.y_ctr [4] \inst_smoldvi_top.y_ctr [5] \inst_smoldvi_top.y_ctr [6] \inst_smoldvi_top.y_ctr [7] } (6 bits)
  packed 3 (3) bits / 3 words into adder tree
  add $auto$wreduce.cc:460:run$798 [1:0] (2 bits, unsigned)
  add bits { \inst_smoldvi_top.x_ctr [2] \inst_smoldvi_top.x_ctr [3] \inst_smoldvi_top.x_ctr [4] \inst_smoldvi_top.x_ctr [5] \inst_smoldvi_top.x_ctr [6] \inst_smoldvi_top.x_ctr [7] } (6 bits)
  packed 3 (3) bits / 3 words into adder tree
  add \inst_smoldvi_top.dvi.tmds2_encoder.imbalance (5 bits, unsigned)
  add \inst_smoldvi_top.dvi.tmds2_encoder.q_m_count (4 bits, unsigned)
  sub $techmap\inst_smoldvi_top.dvi.tmds2_encoder.$logic_not$../hdl/libfpga/video/tmds_encode.v:101$112_Y (1 bits, unsigned)
  add 5'11100 (5 bits, unsigned)
  add \inst_smoldvi_top.dvi.tmds2_encoder.imbalance (5 bits, unsigned)
  sub \inst_smoldvi_top.dvi.tmds2_encoder.q_m_count (4 bits, unsigned)
  add 5'00100 (5 bits, unsigned)
  add \inst_smoldvi_top.dvi.tmds0_encoder.imbalance (5 bits, unsigned)
  sub \inst_smoldvi_top.dvi.tmds0_encoder.q_m_count (4 bits, unsigned)
  add 5'00100 (5 bits, unsigned)
  add bits \inst_smoldvi_top.dvi.tmds0_encoder.q_m [8] (1 bits)
  packed 1 (1) bits / 1 words into adder tree
  add \inst_smoldvi_top.dvi.tmds1_encoder.imbalance (5 bits, unsigned)
  add \inst_smoldvi_top.dvi.tmds1_encoder.q_m_count (4 bits, unsigned)
  sub $techmap\inst_smoldvi_top.dvi.tmds1_encoder.$logic_not$../hdl/libfpga/video/tmds_encode.v:101$112_Y (1 bits, unsigned)
  add 5'11100 (5 bits, unsigned)
  add 3'101 * \inst_smoldvi_top.ser_ck.gearbox_u.in_ptr (3x1 bits, unsigned)
  add 3'101 * \inst_smoldvi_top.ser_d2.gearbox_u.in_ptr (3x1 bits, unsigned)
Using template $paramod$91344ab06d318e5d2d86760463dc7e1bc969c140\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_90_fa\WIDTH=2 for cells of type $fa.
Using template $paramod\_90_fa\WIDTH=3 for cells of type $fa.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=5 for cells of type $fa.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=1 for cells of type $lcu.
Using template $paramod$80e7c9836a4c2807b5ee6ae408eeaf84cb614b34\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$c23c0ed2e7549d092dbc66b8c981f2bf205f0a2f\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$constmap:7a752f8252e12cccdb9457afb340a39c32b91143$paramod$124c38251e223eeb70f41a806caa2084b81e47ea\_90_shift_shiftx for cells of type $shiftx.
No more expansions possible.
<suppressed ~1857 debug messages>

14.32. Executing OPT pass (performing simple optimizations).

14.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module smoldvi_fpga.
<suppressed ~1553 debug messages>

14.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\smoldvi_fpga'.
<suppressed ~1464 debug messages>
Removed a total of 488 cells.

14.32.3. Executing OPT_RMDFF pass (remove dff with constant values).

14.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..
Removed 147 unused cells and 1735 unused wires.
<suppressed ~148 debug messages>

14.32.5. Finished fast OPT passes.

14.33. Executing ABC pass (technology mapping using ABC).

14.33.1. Summary of detected clock domains:
  2069 cells in clk=\bit_pix_div [0], en={ }

14.33.2. Extracting gate netlist of module `\smoldvi_fpga' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \bit_pix_div [0]
Extracted 1661 gates and 2035 wires to a netlist network with 371 inputs and 406 outputs.

14.33.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 80 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + retime -o -D 1 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 1 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

14.33.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      183
ABC RESULTS:            ANDNOT cells:       44
ABC RESULTS:               BUF cells:       94
ABC RESULTS:               DFF cells:       86
ABC RESULTS:               MUX cells:      200
ABC RESULTS:              NAND cells:      105
ABC RESULTS:               NOR cells:       44
ABC RESULTS:               NOT cells:       50
ABC RESULTS:                OR cells:       49
ABC RESULTS:             ORNOT cells:       47
ABC RESULTS:              XNOR cells:       76
ABC RESULTS:               XOR cells:       50
ABC RESULTS:              ZERO cells:       10
ABC RESULTS:        internal signals:     1258
ABC RESULTS:           input signals:      371
ABC RESULTS:          output signals:      406
Removing temp directory.

14.34. Executing ICE40_OPT pass (performing simple optimizations).

14.34.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$889.slice[0].carry: CO=\blink.ctr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$895.slice[0].carry: CO=\inst_smoldvi_top.y_ctr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$901.slice[0].carry: CO=\inst_smoldvi_top.dvi.inst_dvi_timing.v_ctr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$898.slice[0].carry: CO=\inst_smoldvi_top.x_ctr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$maccmap.cc:240:synth$2485.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$maccmap.cc:240:synth$2462.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$maccmap.cc:240:synth$4067.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$maccmap.cc:240:synth$2952.slice[3].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$maccmap.cc:240:synth$2454.slice[3].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$maccmap.cc:240:synth$3748.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$maccmap.cc:240:synth$4052.slice[3].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$maccmap.cc:240:synth$2497.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$maccmap.cc:240:synth$2782.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$maccmap.cc:240:synth$3117.slice[3].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$maccmap.cc:240:synth$2805.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$maccmap.cc:240:synth$4079.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$892.slice[0].carry: CO=\inst_smoldvi_top.frame_ctr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$904.slice[0].carry: CO=\inst_smoldvi_top.dvi.inst_dvi_timing.h_ctr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$maccmap.cc:240:synth$3902.slice[3].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$910.slice[0].carry: CO=\inst_smoldvi_top.ser_d1.gearbox_u.out_ptr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$876.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$876.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$916.slice[0].carry: CO=\inst_smoldvi_top.ser_d2.gearbox_u.out_ptr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$922.slice[0].carry: CO=\inst_smoldvi_top.ser_d0.gearbox_u.out_ptr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$928.slice[0].carry: CO=\inst_smoldvi_top.ser_ck.gearbox_u.out_ptr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$maccmap.cc:240:synth$1847.slice[3].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$850.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$850.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$maccmap.cc:240:synth$4125.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$863.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$863.BB [0]

14.34.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module smoldvi_fpga.

14.34.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\smoldvi_fpga'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

14.34.4. Executing OPT_RMDFF pass (remove dff with constant values).

14.34.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..
Removed 3 unused cells and 990 unused wires.
<suppressed ~4 debug messages>

14.34.6. Rerunning OPT passes. (Removed registers in this run.)

14.34.7. Running ICE40 specific optimizations.

14.34.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module smoldvi_fpga.
<suppressed ~3 debug messages>

14.34.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\smoldvi_fpga'.
Removed a total of 0 cells.

14.34.10. Executing OPT_RMDFF pass (remove dff with constant values).

14.34.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

14.34.12. Rerunning OPT passes. (Removed registers in this run.)

14.34.13. Running ICE40 specific optimizations.

14.34.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module smoldvi_fpga.

14.34.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\smoldvi_fpga'.
Removed a total of 0 cells.

14.34.16. Executing OPT_RMDFF pass (remove dff with constant values).

14.34.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..

14.34.18. Finished OPT passes. (There is nothing left to do.)

14.35. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module smoldvi_fpga:
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6263 to $_DFFE_PP_ for $abc$6236$li26_li26 -> \inst_smoldvi_top.ser_d2.gearbox_u.storage [0].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6264 to $_DFFE_PP_ for $abc$6236$li27_li27 -> \inst_smoldvi_top.ser_d2.gearbox_u.storage [1].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6265 to $_DFFE_PP_ for $abc$6236$li28_li28 -> \inst_smoldvi_top.ser_d2.gearbox_u.storage [2].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6266 to $_DFFE_PP_ for $abc$6236$li29_li29 -> \inst_smoldvi_top.ser_d2.gearbox_u.storage [3].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6267 to $_DFFE_PP_ for $abc$6236$li30_li30 -> \inst_smoldvi_top.ser_d2.gearbox_u.storage [4].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6268 to $_DFFE_PP_ for $abc$6236$li31_li31 -> \inst_smoldvi_top.ser_d2.gearbox_u.storage [5].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6269 to $_DFFE_PP_ for $abc$6236$li32_li32 -> \inst_smoldvi_top.ser_d2.gearbox_u.storage [6].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6270 to $_DFFE_PP_ for $abc$6236$li33_li33 -> \inst_smoldvi_top.ser_d2.gearbox_u.storage [7].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6271 to $_DFFE_PP_ for $abc$6236$li34_li34 -> \inst_smoldvi_top.ser_d2.gearbox_u.storage [8].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6272 to $_DFFE_PP_ for $abc$6236$li35_li35 -> \inst_smoldvi_top.ser_d2.gearbox_u.storage [9].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6273 to $_DFFE_PP_ for $abc$6236$li36_li36 -> \inst_smoldvi_top.ser_d2.gearbox_u.storage [10].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6274 to $_DFFE_PP_ for $abc$6236$li37_li37 -> \inst_smoldvi_top.ser_d2.gearbox_u.storage [11].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6275 to $_DFFE_PP_ for $abc$6236$li38_li38 -> \inst_smoldvi_top.ser_d2.gearbox_u.storage [12].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6276 to $_DFFE_PP_ for $abc$6236$li39_li39 -> \inst_smoldvi_top.ser_d2.gearbox_u.storage [13].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6277 to $_DFFE_PP_ for $abc$6236$li40_li40 -> \inst_smoldvi_top.ser_d2.gearbox_u.storage [14].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6278 to $_DFFE_PP_ for $abc$6236$li41_li41 -> \inst_smoldvi_top.ser_d2.gearbox_u.storage [15].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6279 to $_DFFE_PP_ for $abc$6236$li42_li42 -> \inst_smoldvi_top.ser_d2.gearbox_u.storage [16].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6280 to $_DFFE_PP_ for $abc$6236$li43_li43 -> \inst_smoldvi_top.ser_d2.gearbox_u.storage [17].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6281 to $_DFFE_PP_ for $abc$6236$li44_li44 -> \inst_smoldvi_top.ser_d2.gearbox_u.storage [18].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6282 to $_DFFE_PP_ for $abc$6236$li45_li45 -> \inst_smoldvi_top.ser_d2.gearbox_u.storage [19].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6283 to $_DFFE_PP_ for $abc$6236$li46_li46 -> \inst_smoldvi_top.ser_d1.gearbox_u.storage [0].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6284 to $_DFFE_PP_ for $abc$6236$li47_li47 -> \inst_smoldvi_top.ser_d1.gearbox_u.storage [1].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6285 to $_DFFE_PP_ for $abc$6236$li48_li48 -> \inst_smoldvi_top.ser_d1.gearbox_u.storage [2].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6286 to $_DFFE_PP_ for $abc$6236$li49_li49 -> \inst_smoldvi_top.ser_d1.gearbox_u.storage [3].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6287 to $_DFFE_PP_ for $abc$6236$li50_li50 -> \inst_smoldvi_top.ser_d1.gearbox_u.storage [4].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6288 to $_DFFE_PP_ for $abc$6236$li51_li51 -> \inst_smoldvi_top.ser_d1.gearbox_u.storage [5].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6289 to $_DFFE_PP_ for $abc$6236$li52_li52 -> \inst_smoldvi_top.ser_d1.gearbox_u.storage [6].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6290 to $_DFFE_PP_ for $abc$6236$li53_li53 -> \inst_smoldvi_top.ser_d1.gearbox_u.storage [7].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6291 to $_DFFE_PP_ for $abc$6236$li54_li54 -> \inst_smoldvi_top.ser_d1.gearbox_u.storage [8].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6292 to $_DFFE_PP_ for $abc$6236$li55_li55 -> \inst_smoldvi_top.ser_d1.gearbox_u.storage [9].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6293 to $_DFFE_PP_ for $abc$6236$li56_li56 -> \inst_smoldvi_top.ser_d1.gearbox_u.storage [10].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6294 to $_DFFE_PP_ for $abc$6236$li57_li57 -> \inst_smoldvi_top.ser_d1.gearbox_u.storage [11].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6295 to $_DFFE_PP_ for $abc$6236$li58_li58 -> \inst_smoldvi_top.ser_d1.gearbox_u.storage [12].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6296 to $_DFFE_PP_ for $abc$6236$li59_li59 -> \inst_smoldvi_top.ser_d1.gearbox_u.storage [13].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6297 to $_DFFE_PP_ for $abc$6236$li60_li60 -> \inst_smoldvi_top.ser_d1.gearbox_u.storage [14].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6298 to $_DFFE_PP_ for $abc$6236$li61_li61 -> \inst_smoldvi_top.ser_d1.gearbox_u.storage [15].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6299 to $_DFFE_PP_ for $abc$6236$li62_li62 -> \inst_smoldvi_top.ser_d1.gearbox_u.storage [16].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6300 to $_DFFE_PP_ for $abc$6236$li63_li63 -> \inst_smoldvi_top.ser_d1.gearbox_u.storage [17].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6301 to $_DFFE_PP_ for $abc$6236$li64_li64 -> \inst_smoldvi_top.ser_d1.gearbox_u.storage [18].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6302 to $_DFFE_PP_ for $abc$6236$li65_li65 -> \inst_smoldvi_top.ser_d1.gearbox_u.storage [19].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6303 to $_DFFE_PP_ for $abc$6236$li66_li66 -> \inst_smoldvi_top.ser_d0.gearbox_u.storage [0].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6304 to $_DFFE_PP_ for $abc$6236$li67_li67 -> \inst_smoldvi_top.ser_d0.gearbox_u.storage [1].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6305 to $_DFFE_PP_ for $abc$6236$li68_li68 -> \inst_smoldvi_top.ser_d0.gearbox_u.storage [2].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6306 to $_DFFE_PP_ for $abc$6236$li69_li69 -> \inst_smoldvi_top.ser_d0.gearbox_u.storage [3].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6307 to $_DFFE_PP_ for $abc$6236$li70_li70 -> \inst_smoldvi_top.ser_d0.gearbox_u.storage [4].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6308 to $_DFFE_PP_ for $abc$6236$li71_li71 -> \inst_smoldvi_top.ser_d0.gearbox_u.storage [5].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6309 to $_DFFE_PP_ for $abc$6236$li72_li72 -> \inst_smoldvi_top.ser_d0.gearbox_u.storage [6].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6310 to $_DFFE_PP_ for $abc$6236$li73_li73 -> \inst_smoldvi_top.ser_d0.gearbox_u.storage [7].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6311 to $_DFFE_PP_ for $abc$6236$li74_li74 -> \inst_smoldvi_top.ser_d0.gearbox_u.storage [8].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6312 to $_DFFE_PP_ for $abc$6236$li75_li75 -> \inst_smoldvi_top.ser_d0.gearbox_u.storage [9].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6313 to $_DFFE_PP_ for $abc$6236$li76_li76 -> \inst_smoldvi_top.ser_d0.gearbox_u.storage [10].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6314 to $_DFFE_PP_ for $abc$6236$li77_li77 -> \inst_smoldvi_top.ser_d0.gearbox_u.storage [11].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6315 to $_DFFE_PP_ for $abc$6236$li78_li78 -> \inst_smoldvi_top.ser_d0.gearbox_u.storage [12].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6316 to $_DFFE_PP_ for $abc$6236$li79_li79 -> \inst_smoldvi_top.ser_d0.gearbox_u.storage [13].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6317 to $_DFFE_PP_ for $abc$6236$li80_li80 -> \inst_smoldvi_top.ser_d0.gearbox_u.storage [14].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6318 to $_DFFE_PP_ for $abc$6236$li81_li81 -> \inst_smoldvi_top.ser_d0.gearbox_u.storage [15].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6319 to $_DFFE_PP_ for $abc$6236$li82_li82 -> \inst_smoldvi_top.ser_d0.gearbox_u.storage [16].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6320 to $_DFFE_PP_ for $abc$6236$li83_li83 -> \inst_smoldvi_top.ser_d0.gearbox_u.storage [17].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6321 to $_DFFE_PP_ for $abc$6236$li84_li84 -> \inst_smoldvi_top.ser_d0.gearbox_u.storage [18].
  converting $_DFF_P_ cell $abc$6236$auto$blifparse.cc:358:parse_blif$6322 to $_DFFE_PP_ for $abc$6236$li85_li85 -> \inst_smoldvi_top.ser_d0.gearbox_u.storage [19].
  converting $_DFF_PN0_ cell $auto$simplemap.cc:496:simplemap_adff$1200 to $__DFFE_PN0 for $abc$6236$techmap\inst_smoldvi_top.$0\frame_ctr[7:0][0] -> \inst_smoldvi_top.frame_ctr [0].
  converting $_DFF_PN0_ cell $auto$simplemap.cc:496:simplemap_adff$1201 to $__DFFE_PN0 for $abc$6236$techmap\inst_smoldvi_top.$0\frame_ctr[7:0][1] -> \inst_smoldvi_top.frame_ctr [1].
  converting $_DFF_PN0_ cell $auto$simplemap.cc:496:simplemap_adff$1202 to $__DFFE_PN0 for $abc$6236$techmap\inst_smoldvi_top.$0\frame_ctr[7:0][2] -> \inst_smoldvi_top.frame_ctr [2].
  converting $_DFF_PN0_ cell $auto$simplemap.cc:496:simplemap_adff$1203 to $__DFFE_PN0 for $abc$6236$techmap\inst_smoldvi_top.$0\frame_ctr[7:0][3] -> \inst_smoldvi_top.frame_ctr [3].
  converting $_DFF_PN0_ cell $auto$simplemap.cc:496:simplemap_adff$1204 to $__DFFE_PN0 for $abc$6236$techmap\inst_smoldvi_top.$0\frame_ctr[7:0][4] -> \inst_smoldvi_top.frame_ctr [4].
  converting $_DFF_PN0_ cell $auto$simplemap.cc:496:simplemap_adff$1205 to $__DFFE_PN0 for $abc$6236$techmap\inst_smoldvi_top.$0\frame_ctr[7:0][5] -> \inst_smoldvi_top.frame_ctr [5].
  converting $_DFF_PN0_ cell $auto$simplemap.cc:496:simplemap_adff$1206 to $__DFFE_PN0 for $abc$6236$techmap\inst_smoldvi_top.$0\frame_ctr[7:0][6] -> \inst_smoldvi_top.frame_ctr [6].
  converting $_DFF_PN0_ cell $auto$simplemap.cc:496:simplemap_adff$1207 to $__DFFE_PN0 for $abc$6236$techmap\inst_smoldvi_top.$0\frame_ctr[7:0][7] -> \inst_smoldvi_top.frame_ctr [7].
  converting $_DFF_PN0_ cell $auto$simplemap.cc:496:simplemap_adff$1208 to $__DFFE_PN0 for $abc$6236$techmap\inst_smoldvi_top.$0\y_ctr[8:0][0] -> \inst_smoldvi_top.y_ctr [0].
  converting $_DFF_PN0_ cell $auto$simplemap.cc:496:simplemap_adff$1209 to $__DFFE_PN0 for $abc$6236$techmap\inst_smoldvi_top.$0\y_ctr[8:0][1] -> \inst_smoldvi_top.y_ctr [1].
  converting $_DFF_PN0_ cell $auto$simplemap.cc:496:simplemap_adff$1210 to $__DFFE_PN0 for $abc$6236$techmap\inst_smoldvi_top.$0\y_ctr[8:0][2] -> \inst_smoldvi_top.y_ctr [2].
  converting $_DFF_PN0_ cell $auto$simplemap.cc:496:simplemap_adff$1211 to $__DFFE_PN0 for $abc$6236$techmap\inst_smoldvi_top.$0\y_ctr[8:0][3] -> \inst_smoldvi_top.y_ctr [3].
  converting $_DFF_PN0_ cell $auto$simplemap.cc:496:simplemap_adff$1212 to $__DFFE_PN0 for $abc$6236$techmap\inst_smoldvi_top.$0\y_ctr[8:0][4] -> \inst_smoldvi_top.y_ctr [4].
  converting $_DFF_PN0_ cell $auto$simplemap.cc:496:simplemap_adff$1213 to $__DFFE_PN0 for $abc$6236$techmap\inst_smoldvi_top.$0\y_ctr[8:0][5] -> \inst_smoldvi_top.y_ctr [5].
  converting $_DFF_PN0_ cell $auto$simplemap.cc:496:simplemap_adff$1214 to $__DFFE_PN0 for $abc$6236$techmap\inst_smoldvi_top.$0\y_ctr[8:0][6] -> \inst_smoldvi_top.y_ctr [6].
  converting $_DFF_PN0_ cell $auto$simplemap.cc:496:simplemap_adff$1215 to $__DFFE_PN0 for $abc$6236$techmap\inst_smoldvi_top.$0\y_ctr[8:0][7] -> \inst_smoldvi_top.y_ctr [7].
  converting $_DFF_PN0_ cell $auto$simplemap.cc:496:simplemap_adff$1216 to $__DFFE_PN0 for $abc$6236$techmap\inst_smoldvi_top.$0\y_ctr[8:0][8] -> \inst_smoldvi_top.y_ctr [8].
  converting $_DFF_PN0_ cell $auto$simplemap.cc:496:simplemap_adff$1224 to $__DFFE_PN0 for $abc$6236$techmap\inst_smoldvi_top.$0\x_ctr[9:0][7] -> \inst_smoldvi_top.x_ctr [7].

14.36. Executing TECHMAP pass (map to technology primitives).

14.36.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

14.36.2. Continuing TECHMAP pass.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using template \$_DFF_PN1_ for cells of type $_DFF_PN1_.
Using template \$__DFFE_PN0 for cells of type $__DFFE_PN0.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
No more expansions possible.
<suppressed ~301 debug messages>

14.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module smoldvi_fpga.
<suppressed ~156 debug messages>

14.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping smoldvi_fpga.$techmap$techmap8053$auto$simplemap.cc:496:simplemap_adff$3952.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7958$auto$simplemap.cc:496:simplemap_adff$3316.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:13$7748 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap8038$auto$simplemap.cc:496:simplemap_adff$3804.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:13$7748 ($logic_not).
Mapping smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$889.slice[0].carry ($lut).
Mapping smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$892.slice[0].carry ($lut).
Mapping smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$895.slice[0].carry ($lut).
Mapping smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$898.slice[0].carry ($lut).
Mapping smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$901.slice[0].carry ($lut).
Mapping smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$904.slice[0].carry ($lut).
Mapping smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$910.slice[0].carry ($lut).
Mapping smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$916.slice[0].carry ($lut).
Mapping smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$922.slice[0].carry ($lut).
Mapping smoldvi_fpga.$auto$alumacc.cc:485:replace_alu$928.slice[0].carry ($lut).
Mapping smoldvi_fpga.$auto$maccmap.cc:240:synth$1847.slice[3].carry ($lut).
Mapping smoldvi_fpga.$auto$maccmap.cc:240:synth$2454.slice[3].carry ($lut).
Mapping smoldvi_fpga.$auto$maccmap.cc:240:synth$2462.slice[0].carry ($lut).
Mapping smoldvi_fpga.$auto$maccmap.cc:240:synth$2485.slice[0].carry ($lut).
Mapping smoldvi_fpga.$auto$maccmap.cc:240:synth$2497.slice[0].carry ($lut).
Mapping smoldvi_fpga.$auto$maccmap.cc:240:synth$2782.slice[0].carry ($lut).
Mapping smoldvi_fpga.$auto$maccmap.cc:240:synth$2952.slice[3].carry ($lut).
Mapping smoldvi_fpga.$auto$maccmap.cc:240:synth$3117.slice[3].carry ($lut).
Mapping smoldvi_fpga.$auto$maccmap.cc:240:synth$3902.slice[3].carry ($lut).
Mapping smoldvi_fpga.$auto$maccmap.cc:240:synth$4052.slice[3].carry ($lut).
Mapping smoldvi_fpga.$auto$maccmap.cc:240:synth$4067.slice[0].carry ($lut).
Mapping smoldvi_fpga.$auto$maccmap.cc:240:synth$4125.slice[0].carry ($lut).
Mapping smoldvi_fpga.$techmap$techmap7753$auto$simplemap.cc:496:simplemap_adff$1109.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7754$auto$simplemap.cc:496:simplemap_adff$1110.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7765$auto$simplemap.cc:496:simplemap_adff$1116.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:13$7748 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7761$auto$simplemap.cc:496:simplemap_adff$1851.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7762$auto$simplemap.cc:496:simplemap_adff$1113.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7763$auto$simplemap.cc:496:simplemap_adff$1114.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:13$7748 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7764$auto$simplemap.cc:496:simplemap_adff$1115.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:13$7748 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7755$auto$simplemap.cc:496:simplemap_adff$1111.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7756$auto$simplemap.cc:496:simplemap_adff$1117.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7766$auto$simplemap.cc:496:simplemap_adff$1112.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7767$auto$simplemap.cc:496:simplemap_adff$1119.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7784$auto$simplemap.cc:496:simplemap_adff$1400.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7817$auto$simplemap.cc:496:simplemap_adff$1202.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:22$7751 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7816$auto$simplemap.cc:496:simplemap_adff$1203.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:22$7751 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7815$auto$simplemap.cc:496:simplemap_adff$1204.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:22$7751 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7814$auto$simplemap.cc:496:simplemap_adff$1205.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:22$7751 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7813$auto$simplemap.cc:496:simplemap_adff$1206.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:22$7751 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7812$auto$simplemap.cc:496:simplemap_adff$1875.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7810$auto$simplemap.cc:496:simplemap_adff$1209.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:22$7751 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7785$auto$simplemap.cc:496:simplemap_adff$1200.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:22$7751 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7809$auto$simplemap.cc:496:simplemap_adff$1210.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:22$7751 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7808$auto$simplemap.cc:496:simplemap_adff$1211.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:22$7751 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7807$auto$simplemap.cc:496:simplemap_adff$1212.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:22$7751 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7806$auto$simplemap.cc:496:simplemap_adff$1213.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:22$7751 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7805$auto$simplemap.cc:496:simplemap_adff$1214.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:22$7751 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7804$auto$simplemap.cc:496:simplemap_adff$1215.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:22$7751 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7803$auto$simplemap.cc:496:simplemap_adff$1216.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:22$7751 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7802$auto$simplemap.cc:496:simplemap_adff$1218.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7786$auto$simplemap.cc:496:simplemap_adff$1208.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:22$7751 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7801$auto$simplemap.cc:496:simplemap_adff$1219.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7800$auto$simplemap.cc:496:simplemap_adff$1220.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7799$auto$simplemap.cc:496:simplemap_adff$1221.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7798$auto$simplemap.cc:496:simplemap_adff$1222.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7797$auto$simplemap.cc:496:simplemap_adff$1223.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7796$auto$simplemap.cc:496:simplemap_adff$1224.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:22$7751 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7795$auto$simplemap.cc:496:simplemap_adff$1867.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:13$7748 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7793$auto$simplemap.cc:496:simplemap_adff$1226.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7792$auto$simplemap.cc:496:simplemap_adff$1863.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:13$7748 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7787$auto$simplemap.cc:496:simplemap_adff$1217.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7788$auto$simplemap.cc:496:simplemap_adff$1368.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7789$auto$simplemap.cc:496:simplemap_adff$1376.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:13$7748 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7758$auto$simplemap.cc:496:simplemap_adff$1399.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7757$auto$simplemap.cc:496:simplemap_adff$1118.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7783$auto$simplemap.cc:496:simplemap_adff$1884.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7790$auto$simplemap.cc:496:simplemap_adff$1397.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7759$auto$simplemap.cc:496:simplemap_adff$1398.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7760$auto$simplemap.cc:496:simplemap_adff$1402.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:13$7748 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7791$auto$simplemap.cc:496:simplemap_adff$1401.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:13$7748 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7774$auto$simplemap.cc:496:simplemap_adff$1881.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7769$auto$simplemap.cc:496:simplemap_adff$1866.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7768$auto$simplemap.cc:496:simplemap_adff$1120.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7794$auto$simplemap.cc:496:simplemap_adff$1225.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7781$auto$simplemap.cc:496:simplemap_adff$1869.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7780$auto$simplemap.cc:496:simplemap_adff$1870.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7779$auto$simplemap.cc:496:simplemap_adff$1877.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7811$auto$simplemap.cc:496:simplemap_adff$1207.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:22$7751 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7818$auto$simplemap.cc:496:simplemap_adff$1201.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:22$7751 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7778$auto$simplemap.cc:496:simplemap_adff$1878.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7777$auto$simplemap.cc:496:simplemap_adff$1879.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7776$auto$simplemap.cc:496:simplemap_adff$1880.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7775$auto$simplemap.cc:496:simplemap_adff$1864.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7773$auto$simplemap.cc:496:simplemap_adff$1885.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7771$auto$simplemap.cc:496:simplemap_adff$1883.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7770$auto$simplemap.cc:496:simplemap_adff$1865.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7782$auto$simplemap.cc:496:simplemap_adff$1868.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7772$auto$simplemap.cc:496:simplemap_adff$1882.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7819$auto$simplemap.cc:496:simplemap_adff$1876.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7820$auto$simplemap.cc:496:simplemap_adff$1886.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7821$auto$simplemap.cc:496:simplemap_adff$1887.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:13$7748 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7854$auto$simplemap.cc:496:simplemap_adff$4057.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7855$auto$simplemap.cc:496:simplemap_adff$1891.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7840$auto$simplemap.cc:496:simplemap_adff$3270.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7856$auto$simplemap.cc:496:simplemap_adff$1892.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7857$auto$simplemap.cc:496:simplemap_adff$1894.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7858$auto$simplemap.cc:496:simplemap_adff$1895.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7859$auto$simplemap.cc:496:simplemap_adff$1896.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7860$auto$simplemap.cc:496:simplemap_adff$1897.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7822$auto$simplemap.cc:496:simplemap_adff$1890.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7823$auto$simplemap.cc:496:simplemap_adff$1899.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7824$auto$simplemap.cc:496:simplemap_adff$1900.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:13$7748 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7861$auto$simplemap.cc:496:simplemap_adff$1898.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7862$auto$simplemap.cc:496:simplemap_adff$2318.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7863$auto$simplemap.cc:496:simplemap_adff$2319.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7864$auto$simplemap.cc:496:simplemap_adff$2320.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7865$auto$simplemap.cc:496:simplemap_adff$2321.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7866$auto$simplemap.cc:496:simplemap_adff$2322.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7867$auto$simplemap.cc:496:simplemap_adff$2323.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7868$auto$simplemap.cc:496:simplemap_adff$2324.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7869$auto$simplemap.cc:496:simplemap_adff$2325.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7825$auto$simplemap.cc:496:simplemap_adff$2317.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7870$auto$simplemap.cc:496:simplemap_adff$2327.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7871$auto$simplemap.cc:496:simplemap_adff$2329.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7872$auto$simplemap.cc:496:simplemap_adff$2330.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7873$auto$simplemap.cc:496:simplemap_adff$2331.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7874$auto$simplemap.cc:496:simplemap_adff$2332.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7875$auto$simplemap.cc:496:simplemap_adff$2333.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7876$auto$simplemap.cc:496:simplemap_adff$2334.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7877$auto$simplemap.cc:496:simplemap_adff$2335.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7878$auto$simplemap.cc:496:simplemap_adff$2336.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7826$auto$simplemap.cc:496:simplemap_adff$2328.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7879$auto$simplemap.cc:496:simplemap_adff$2337.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7880$auto$simplemap.cc:496:simplemap_adff$2339.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7881$auto$simplemap.cc:496:simplemap_adff$2340.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7882$auto$simplemap.cc:496:simplemap_adff$2341.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7828$auto$simplemap.cc:496:simplemap_adff$2345.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7884$auto$simplemap.cc:496:simplemap_adff$2346.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7827$auto$simplemap.cc:496:simplemap_adff$2338.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7883$auto$simplemap.cc:496:simplemap_adff$2342.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7829$auto$simplemap.cc:496:simplemap_adff$2343.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7885$auto$simplemap.cc:496:simplemap_adff$2344.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7886$auto$simplemap.cc:496:simplemap_adff$2348.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7887$auto$simplemap.cc:496:simplemap_adff$2349.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7888$auto$simplemap.cc:496:simplemap_adff$2350.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7889$auto$simplemap.cc:496:simplemap_adff$2351.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7890$auto$simplemap.cc:496:simplemap_adff$2352.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7891$auto$simplemap.cc:496:simplemap_adff$2353.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7892$auto$simplemap.cc:496:simplemap_adff$2354.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7893$auto$simplemap.cc:496:simplemap_adff$2355.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7830$auto$simplemap.cc:496:simplemap_adff$2347.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7894$auto$simplemap.cc:496:simplemap_adff$2356.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7895$auto$simplemap.cc:496:simplemap_adff$2689.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7896$auto$simplemap.cc:496:simplemap_adff$2690.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7897$auto$simplemap.cc:496:simplemap_adff$2691.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7898$auto$simplemap.cc:496:simplemap_adff$2692.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7899$auto$simplemap.cc:496:simplemap_adff$2693.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7900$auto$simplemap.cc:496:simplemap_adff$2694.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7901$auto$simplemap.cc:496:simplemap_adff$2695.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7831$auto$simplemap.cc:496:simplemap_adff$2688.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7902$auto$simplemap.cc:496:simplemap_adff$2696.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7903$auto$simplemap.cc:496:simplemap_adff$2700.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7904$auto$simplemap.cc:496:simplemap_adff$2701.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7905$auto$simplemap.cc:496:simplemap_adff$2702.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7906$auto$simplemap.cc:496:simplemap_adff$2703.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7907$auto$simplemap.cc:496:simplemap_adff$2704.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7908$auto$simplemap.cc:496:simplemap_adff$2705.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7909$auto$simplemap.cc:496:simplemap_adff$2706.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7910$auto$simplemap.cc:496:simplemap_adff$2707.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7832$auto$simplemap.cc:496:simplemap_adff$2699.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7911$auto$simplemap.cc:496:simplemap_adff$2708.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7912$auto$simplemap.cc:496:simplemap_adff$2710.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7913$auto$simplemap.cc:496:simplemap_adff$2711.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7914$auto$simplemap.cc:496:simplemap_adff$2712.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7833$auto$simplemap.cc:496:simplemap_adff$2709.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7915$auto$simplemap.cc:496:simplemap_adff$2713.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7916$auto$simplemap.cc:496:simplemap_adff$2715.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7917$auto$simplemap.cc:496:simplemap_adff$2716.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7918$auto$simplemap.cc:496:simplemap_adff$2717.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7919$auto$simplemap.cc:496:simplemap_adff$2718.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7920$auto$simplemap.cc:496:simplemap_adff$2719.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7921$auto$simplemap.cc:496:simplemap_adff$2720.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7922$auto$simplemap.cc:496:simplemap_adff$2721.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7923$auto$simplemap.cc:496:simplemap_adff$2722.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7834$auto$simplemap.cc:496:simplemap_adff$2714.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7924$auto$simplemap.cc:496:simplemap_adff$2723.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7925$auto$simplemap.cc:496:simplemap_adff$3020.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7926$auto$simplemap.cc:496:simplemap_adff$3021.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7927$auto$simplemap.cc:496:simplemap_adff$3022.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7928$auto$simplemap.cc:496:simplemap_adff$3023.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7929$auto$simplemap.cc:496:simplemap_adff$3024.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7930$auto$simplemap.cc:496:simplemap_adff$3025.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7931$auto$simplemap.cc:496:simplemap_adff$3026.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7835$auto$simplemap.cc:496:simplemap_adff$3019.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7836$auto$simplemap.cc:496:simplemap_adff$3028.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7932$auto$simplemap.cc:496:simplemap_adff$3027.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7933$auto$simplemap.cc:496:simplemap_adff$3031.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7934$auto$simplemap.cc:496:simplemap_adff$3032.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7935$auto$simplemap.cc:496:simplemap_adff$3033.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7936$auto$simplemap.cc:496:simplemap_adff$3034.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7937$auto$simplemap.cc:496:simplemap_adff$3035.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7938$auto$simplemap.cc:496:simplemap_adff$3036.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7939$auto$simplemap.cc:496:simplemap_adff$3037.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7940$auto$simplemap.cc:496:simplemap_adff$3038.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7837$auto$simplemap.cc:496:simplemap_adff$3030.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7941$auto$simplemap.cc:496:simplemap_adff$3039.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7942$auto$simplemap.cc:496:simplemap_adff$3041.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7943$auto$simplemap.cc:496:simplemap_adff$3042.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7944$auto$simplemap.cc:496:simplemap_adff$3043.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7838$auto$simplemap.cc:496:simplemap_adff$3040.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7945$auto$simplemap.cc:496:simplemap_adff$3044.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7946$auto$simplemap.cc:496:simplemap_adff$3046.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7947$auto$simplemap.cc:496:simplemap_adff$3047.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7948$auto$simplemap.cc:496:simplemap_adff$3048.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7949$auto$simplemap.cc:496:simplemap_adff$3049.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7950$auto$simplemap.cc:496:simplemap_adff$3050.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7951$auto$simplemap.cc:496:simplemap_adff$3051.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7952$auto$simplemap.cc:496:simplemap_adff$3052.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7953$auto$simplemap.cc:496:simplemap_adff$3053.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7839$auto$simplemap.cc:496:simplemap_adff$3045.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7841$auto$simplemap.cc:496:simplemap_adff$1893.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7842$auto$simplemap.cc:496:simplemap_adff$3290.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:13$7748 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7954$auto$simplemap.cc:496:simplemap_adff$3054.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7955$auto$simplemap.cc:496:simplemap_adff$3312.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7956$auto$simplemap.cc:496:simplemap_adff$3313.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7843$auto$simplemap.cc:496:simplemap_adff$3311.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7957$auto$simplemap.cc:496:simplemap_adff$3314.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7844$auto$simplemap.cc:496:simplemap_adff$3315.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:13$7748 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7845$auto$simplemap.cc:496:simplemap_adff$3756.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7846$auto$simplemap.cc:496:simplemap_adff$3778.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:13$7748 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap8034$auto$simplemap.cc:496:simplemap_adff$3755.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap8035$auto$simplemap.cc:496:simplemap_adff$3800.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap8036$auto$simplemap.cc:496:simplemap_adff$3801.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7847$auto$simplemap.cc:496:simplemap_adff$3799.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap8037$auto$simplemap.cc:496:simplemap_adff$3802.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7848$auto$simplemap.cc:496:simplemap_adff$3803.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:13$7748 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7849$auto$simplemap.cc:496:simplemap_adff$3907.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7850$auto$simplemap.cc:496:simplemap_adff$3928.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:13$7748 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap8050$auto$simplemap.cc:496:simplemap_adff$3906.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap8051$auto$simplemap.cc:496:simplemap_adff$3950.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap8052$auto$simplemap.cc:496:simplemap_adff$3951.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7851$auto$simplemap.cc:496:simplemap_adff$3949.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:12$7747 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7852$auto$simplemap.cc:496:simplemap_adff$3953.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:13$7748 ($logic_not).
Mapping smoldvi_fpga.$techmap$techmap7853$auto$simplemap.cc:496:simplemap_adff$3954.$logic_not$/usr/local/bin/../share/yosys/ice40/cells_map.v:13$7748 ($logic_not).

14.39. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in smoldvi_fpga.
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$1111 (SB_DFFR): \rstgen.has_shifter.shift [2] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$1110 (SB_DFFR): \rstgen.has_shifter.shift [1] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$1109 (SB_DFFR): \rstgen.has_shifter.shift [0] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6243 (SB_DFF): \blink.ctr [5] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6238 (SB_DFF): \blink.ctr [0] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6239 (SB_DFF): \blink.ctr [1] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6275 (SB_DFFE): \inst_smoldvi_top.ser_d2.gearbox_u.storage [12] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6300 (SB_DFFE): \inst_smoldvi_top.ser_d1.gearbox_u.storage [17] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6266 (SB_DFFE): \inst_smoldvi_top.ser_d2.gearbox_u.storage [3] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6311 (SB_DFFE): \inst_smoldvi_top.ser_d0.gearbox_u.storage [8] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6237 (SB_DFF): \blink.blink_r = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6241 (SB_DFF): \blink.ctr [3] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6242 (SB_DFF): \blink.ctr [4] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6244 (SB_DFF): \blink.ctr [6] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6245 (SB_DFF): \blink.ctr [7] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6246 (SB_DFF): \blink.ctr [8] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6247 (SB_DFF): \blink.ctr [9] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6302 (SB_DFFE): \inst_smoldvi_top.ser_d1.gearbox_u.storage [19] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6248 (SB_DFF): \blink.ctr [10] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6249 (SB_DFF): \blink.ctr [11] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6250 (SB_DFF): \blink.ctr [12] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6251 (SB_DFF): \blink.ctr [13] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6252 (SB_DFF): \blink.ctr [14] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6253 (SB_DFF): \blink.ctr [15] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6254 (SB_DFF): \blink.ctr [16] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6256 (SB_DFF): \blink.ctr [18] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6240 (SB_DFF): \blink.ctr [2] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6257 (SB_DFF): \blink.ctr [19] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6258 (SB_DFF): \blink.ctr [20] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6259 (SB_DFF): \blink.ctr [21] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6260 (SB_DFF): \blink.ctr [22] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6261 (SB_DFF): \inst_smoldvi_top.ser_ck.gearbox_u.storage [9] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6262 (SB_DFF): \inst_smoldvi_top.ser_ck.gearbox_u.storage [19] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6263 (SB_DFFE): \inst_smoldvi_top.ser_d2.gearbox_u.storage [0] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6264 (SB_DFFE): \inst_smoldvi_top.ser_d2.gearbox_u.storage [1] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6265 (SB_DFFE): \inst_smoldvi_top.ser_d2.gearbox_u.storage [2] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6267 (SB_DFFE): \inst_smoldvi_top.ser_d2.gearbox_u.storage [4] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6268 (SB_DFFE): \inst_smoldvi_top.ser_d2.gearbox_u.storage [5] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6269 (SB_DFFE): \inst_smoldvi_top.ser_d2.gearbox_u.storage [6] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6270 (SB_DFFE): \inst_smoldvi_top.ser_d2.gearbox_u.storage [7] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6271 (SB_DFFE): \inst_smoldvi_top.ser_d2.gearbox_u.storage [8] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6272 (SB_DFFE): \inst_smoldvi_top.ser_d2.gearbox_u.storage [9] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6273 (SB_DFFE): \inst_smoldvi_top.ser_d2.gearbox_u.storage [10] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6255 (SB_DFF): \blink.ctr [17] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6274 (SB_DFFE): \inst_smoldvi_top.ser_d2.gearbox_u.storage [11] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6276 (SB_DFFE): \inst_smoldvi_top.ser_d2.gearbox_u.storage [13] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6277 (SB_DFFE): \inst_smoldvi_top.ser_d2.gearbox_u.storage [14] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6278 (SB_DFFE): \inst_smoldvi_top.ser_d2.gearbox_u.storage [15] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6279 (SB_DFFE): \inst_smoldvi_top.ser_d2.gearbox_u.storage [16] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6280 (SB_DFFE): \inst_smoldvi_top.ser_d2.gearbox_u.storage [17] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6281 (SB_DFFE): \inst_smoldvi_top.ser_d2.gearbox_u.storage [18] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6299 (SB_DFFE): \inst_smoldvi_top.ser_d1.gearbox_u.storage [16] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6283 (SB_DFFE): \inst_smoldvi_top.ser_d1.gearbox_u.storage [0] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6284 (SB_DFFE): \inst_smoldvi_top.ser_d1.gearbox_u.storage [1] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6285 (SB_DFFE): \inst_smoldvi_top.ser_d1.gearbox_u.storage [2] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6286 (SB_DFFE): \inst_smoldvi_top.ser_d1.gearbox_u.storage [3] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6287 (SB_DFFE): \inst_smoldvi_top.ser_d1.gearbox_u.storage [4] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6288 (SB_DFFE): \inst_smoldvi_top.ser_d1.gearbox_u.storage [5] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6289 (SB_DFFE): \inst_smoldvi_top.ser_d1.gearbox_u.storage [6] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6282 (SB_DFFE): \inst_smoldvi_top.ser_d2.gearbox_u.storage [19] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6290 (SB_DFFE): \inst_smoldvi_top.ser_d1.gearbox_u.storage [7] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6291 (SB_DFFE): \inst_smoldvi_top.ser_d1.gearbox_u.storage [8] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6292 (SB_DFFE): \inst_smoldvi_top.ser_d1.gearbox_u.storage [9] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6293 (SB_DFFE): \inst_smoldvi_top.ser_d1.gearbox_u.storage [10] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6294 (SB_DFFE): \inst_smoldvi_top.ser_d1.gearbox_u.storage [11] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6295 (SB_DFFE): \inst_smoldvi_top.ser_d1.gearbox_u.storage [12] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6296 (SB_DFFE): \inst_smoldvi_top.ser_d1.gearbox_u.storage [13] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6297 (SB_DFFE): \inst_smoldvi_top.ser_d1.gearbox_u.storage [14] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6298 (SB_DFFE): \inst_smoldvi_top.ser_d1.gearbox_u.storage [15] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6301 (SB_DFFE): \inst_smoldvi_top.ser_d1.gearbox_u.storage [18] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6303 (SB_DFFE): \inst_smoldvi_top.ser_d0.gearbox_u.storage [0] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6304 (SB_DFFE): \inst_smoldvi_top.ser_d0.gearbox_u.storage [1] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6305 (SB_DFFE): \inst_smoldvi_top.ser_d0.gearbox_u.storage [2] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6306 (SB_DFFE): \inst_smoldvi_top.ser_d0.gearbox_u.storage [3] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6307 (SB_DFFE): \inst_smoldvi_top.ser_d0.gearbox_u.storage [4] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6308 (SB_DFFE): \inst_smoldvi_top.ser_d0.gearbox_u.storage [5] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6309 (SB_DFFE): \inst_smoldvi_top.ser_d0.gearbox_u.storage [6] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6320 (SB_DFFE): \inst_smoldvi_top.ser_d0.gearbox_u.storage [17] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6322 (SB_DFFE): \inst_smoldvi_top.ser_d0.gearbox_u.storage [19] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6321 (SB_DFFE): \inst_smoldvi_top.ser_d0.gearbox_u.storage [18] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6319 (SB_DFFE): \inst_smoldvi_top.ser_d0.gearbox_u.storage [16] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6312 (SB_DFFE): \inst_smoldvi_top.ser_d0.gearbox_u.storage [9] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6313 (SB_DFFE): \inst_smoldvi_top.ser_d0.gearbox_u.storage [10] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6314 (SB_DFFE): \inst_smoldvi_top.ser_d0.gearbox_u.storage [11] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6315 (SB_DFFE): \inst_smoldvi_top.ser_d0.gearbox_u.storage [12] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6316 (SB_DFFE): \inst_smoldvi_top.ser_d0.gearbox_u.storage [13] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6317 (SB_DFFE): \inst_smoldvi_top.ser_d0.gearbox_u.storage [14] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6310 (SB_DFFE): \inst_smoldvi_top.ser_d0.gearbox_u.storage [7] = 0
FF init value for cell $abc$6236$auto$blifparse.cc:358:parse_blif$6318 (SB_DFFE): \inst_smoldvi_top.ser_d0.gearbox_u.storage [15] = 0

14.40. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in smoldvi_fpga.

14.41. Executing ICE40_OPT pass (performing simple optimizations).

14.41.1. Running ICE40 specific optimizations.

14.41.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module smoldvi_fpga.
<suppressed ~307 debug messages>

14.41.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\smoldvi_fpga'.
<suppressed ~744 debug messages>
Removed a total of 248 cells.

14.41.4. Executing OPT_RMDFF pass (remove dff with constant values).

14.41.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..
Removed 6 unused cells and 1851 unused wires.
<suppressed ~7 debug messages>

14.41.6. Rerunning OPT passes. (Removed registers in this run.)

14.41.7. Running ICE40 specific optimizations.

14.41.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module smoldvi_fpga.

14.41.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\smoldvi_fpga'.
Removed a total of 0 cells.

14.41.10. Executing OPT_RMDFF pass (remove dff with constant values).

14.41.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \smoldvi_fpga..

14.41.12. Finished OPT passes. (There is nothing left to do.)

14.42. Executing TECHMAP pass (map to technology primitives).

14.42.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

14.42.2. Continuing TECHMAP pass.
No more expansions possible.

14.43. Executing ABC pass (technology mapping using ABC).

14.43.1. Extracting gate netlist of module `\smoldvi_fpga' to `<abc-temp-dir>/input.blif'..
Extracted 778 gates and 1183 wires to a netlist network with 405 inputs and 321 outputs.

14.43.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =     412.
ABC: Participating nodes from both networks       =     851.
ABC: Participating nodes from the first network   =     417. (  80.97 % of nodes)
ABC: Participating nodes from the second network  =     434. (  84.27 % of nodes)
ABC: Node pairs (any polarity)                    =     417. (  80.97 % of names can be moved)
ABC: Node pairs (same polarity)                   =     385. (  74.76 % of names can be moved)
ABC: Total runtime =     0.02 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

14.43.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      514
ABC RESULTS:        internal signals:      457
ABC RESULTS:           input signals:      405
ABC RESULTS:          output signals:      321
Removing temp directory.

14.44. Executing ICE40_WRAPCARRY pass (wrap carries).

14.45. Executing TECHMAP pass (map to technology primitives).

14.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

14.45.2. Continuing TECHMAP pass.
No more expansions possible.
Removed 31 unused cells and 1208 unused wires.

14.46. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:      661
  1-LUT               45
  2-LUT              293
  3-LUT              162
  4-LUT              161

Eliminating LUTs.
Number of LUTs:      661
  1-LUT               45
  2-LUT              293
  3-LUT              162
  4-LUT              161

Combining LUTs.
Number of LUTs:      592
  1-LUT               45
  2-LUT              181
  3-LUT              198
  4-LUT              168

Eliminated 0 LUTs.
Combined 69 LUTs.
<suppressed ~3790 debug messages>

14.47. Executing TECHMAP pass (map to technology primitives).

14.47.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

14.47.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101101011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111011101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101101001011010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100100100110110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111011101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001011111101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110101110111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010001110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111110001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110010101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101011000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101000111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101000110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111110100000 for cells of type $lut.
No more expansions possible.
<suppressed ~1580 debug messages>
Removed 0 unused cells and 1253 unused wires.

14.48. Executing AUTONAME pass.
Renamed 8678 objects in module smoldvi_fpga (37 iterations).
<suppressed ~1630 debug messages>

14.49. Executing HIERARCHY pass (managing design hierarchy).

14.49.1. Analyzing design hierarchy..
Top module:  \smoldvi_fpga

14.49.2. Analyzing design hierarchy..
Top module:  \smoldvi_fpga
Removed 0 unused modules.

14.50. Printing statistics.

=== smoldvi_fpga ===

   Number of wires:                862
   Number of wire bits:           1753
   Number of public wires:         862
   Number of public wire bits:    1753
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1036
     SB_CARRY                      134
     SB_DFF                         26
     SB_DFFE                        60
     SB_DFFER                       18
     SB_DFFR                       178
     SB_DFFS                        19
     SB_IO                           8
     SB_LUT4                       592
     SB_PLL40_CORE                   1

14.51. Executing CHECK pass (checking for obvious problems).
checking module smoldvi_fpga..
found and reported 0 problems.

15. Executing JSON backend.

Warnings: 4 unique messages, 4 total
End of script. Logfile hash: 295d989d8f, CPU: user 1.71s system 0.06s, MEM: 55.78 MB peak
Yosys 0.9+2406 (git sha1 aafaeb66, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 17% 25x opt_clean (0 sec), 17% 28x opt_expr (0 sec), ...
